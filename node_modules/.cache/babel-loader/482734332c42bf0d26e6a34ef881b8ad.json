{"ast":null,"code":"'use strict';\n\nvar M = module.exports;\n\nvar native = require('./lib/native.js'); // Keep track of active maintainers so that we know who to inform if\n// something breaks or has a serious bug or flaw.\n\n\nvar oldCollegeTries = {};\n\nM.init = function (me) {\n  if (oldCollegeTries[me.maintainerEmail]) {\n    return;\n  }\n\n  var tz = '';\n\n  try {\n    // Use timezone to stagger messages to maintainers\n    tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  } catch (e) {} // ignore node versions with no or incomplete Intl\n  // Use locale to know what language to use\n\n\n  var env = process.env;\n  var locale = env.LC_ALL || env.LC_MESSAGES || env.LANG || env.LANGUAGE;\n\n  try {\n    M._init(me, tz, locale);\n  } catch (e) {//console.log(e);\n    // ignore\n  }\n};\n\nM._init = function (me, tz, locale) {\n  setTimeout(function () {\n    // prevent a stampede from misconfigured clients in an eternal loop\n    me.request({\n      timeout: 3000,\n      method: 'GET',\n      url: 'https://api.rootprojects.org/api/nonce',\n      json: true\n    }).then(function (resp) {\n      // in the browser this will work until solved, but in\n      // node this will bail unless the challenge is trivial\n      return native._hashcash(resp.body || {});\n    }).then(function (hashcash) {\n      var req = {\n        timeout: 3000,\n        headers: {\n          'x-root-nonce-v1': hashcash\n        },\n        method: 'POST',\n        url: 'https://api.rootprojects.org/api/projects/ACME.js/dependents',\n        json: {\n          maintainer: me.maintainerEmail,\n          package: me.packageAgent,\n          tz: tz,\n          locale: locale\n        }\n      };\n      return me.request(req);\n    }).catch(function (err) {\n      if (me.debug) {\n        console.error('error adding maintainer to support notices:');\n        console.error(err);\n      }\n    }).then(function ()\n    /*resp*/\n    {\n      oldCollegeTries[me.maintainerEmail] = true; //console.log(resp);\n    });\n  }, me.__timeout || 3000);\n};\n\nif (require.main === module) {\n  var ACME = require('./');\n\n  var acme = ACME.create({\n    maintainerEmail: 'aj+acme-test@rootprojects.org',\n    packageAgent: 'test/v0',\n    __timeout: 100\n  });\n  M.init(acme);\n}","map":{"version":3,"sources":["C:/Users/xuwen/Desktop/INFO340/project-2-xuwensi/node_modules/@root/acme/maintainers.js"],"names":["M","module","exports","native","require","oldCollegeTries","init","me","maintainerEmail","tz","Intl","DateTimeFormat","resolvedOptions","timeZone","e","env","process","locale","LC_ALL","LC_MESSAGES","LANG","LANGUAGE","_init","setTimeout","request","timeout","method","url","json","then","resp","_hashcash","body","hashcash","req","headers","maintainer","package","packageAgent","catch","err","debug","console","error","__timeout","main","ACME","acme","create"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,MAAM,CAACC,OAAf;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB,C,CAEA;AACA;;;AAEA,IAAIC,eAAe,GAAG,EAAtB;;AACAL,CAAC,CAACM,IAAF,GAAS,UAASC,EAAT,EAAa;AACrB,MAAIF,eAAe,CAACE,EAAE,CAACC,eAAJ,CAAnB,EAAyC;AACxC;AACA;;AAED,MAAIC,EAAE,GAAG,EAAT;;AACA,MAAI;AACH;AACAA,IAAAA,EAAE,GAAGC,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAA7C;AACA,GAHD,CAGE,OAAOC,CAAP,EAAU,CAEX,CAFC,CACD;AAGD;;;AACA,MAAIC,GAAG,GAAGC,OAAO,CAACD,GAAlB;AACA,MAAIE,MAAM,GAAGF,GAAG,CAACG,MAAJ,IAAcH,GAAG,CAACI,WAAlB,IAAiCJ,GAAG,CAACK,IAArC,IAA6CL,GAAG,CAACM,QAA9D;;AAEA,MAAI;AACHrB,IAAAA,CAAC,CAACsB,KAAF,CAAQf,EAAR,EAAYE,EAAZ,EAAgBQ,MAAhB;AACA,GAFD,CAEE,OAAOH,CAAP,EAAU,CACX;AACA;AACA;AACD,CAvBD;;AAyBAd,CAAC,CAACsB,KAAF,GAAU,UAASf,EAAT,EAAaE,EAAb,EAAiBQ,MAAjB,EAAyB;AAClCM,EAAAA,UAAU,CAAC,YAAW;AACrB;AACAhB,IAAAA,EAAE,CAACiB,OAAH,CAAW;AACVC,MAAAA,OAAO,EAAE,IADC;AAEVC,MAAAA,MAAM,EAAE,KAFE;AAGVC,MAAAA,GAAG,EAAE,wCAHK;AAIVC,MAAAA,IAAI,EAAE;AAJI,KAAX,EAMEC,IANF,CAMO,UAASC,IAAT,EAAe;AACpB;AACA;AACA,aAAO3B,MAAM,CAAC4B,SAAP,CAAiBD,IAAI,CAACE,IAAL,IAAa,EAA9B,CAAP;AACA,KAVF,EAWEH,IAXF,CAWO,UAASI,QAAT,EAAmB;AACxB,UAAIC,GAAG,GAAG;AACTT,QAAAA,OAAO,EAAE,IADA;AAETU,QAAAA,OAAO,EAAE;AACR,6BAAmBF;AADX,SAFA;AAKTP,QAAAA,MAAM,EAAE,MALC;AAMTC,QAAAA,GAAG,EACF,8DAPQ;AAQTC,QAAAA,IAAI,EAAE;AACLQ,UAAAA,UAAU,EAAE7B,EAAE,CAACC,eADV;AAEL6B,UAAAA,OAAO,EAAE9B,EAAE,CAAC+B,YAFP;AAGL7B,UAAAA,EAAE,EAAEA,EAHC;AAILQ,UAAAA,MAAM,EAAEA;AAJH;AARG,OAAV;AAeA,aAAOV,EAAE,CAACiB,OAAH,CAAWU,GAAX,CAAP;AACA,KA5BF,EA6BEK,KA7BF,CA6BQ,UAASC,GAAT,EAAc;AACpB,UAAIjC,EAAE,CAACkC,KAAP,EAAc;AACbC,QAAAA,OAAO,CAACC,KAAR,CACC,6CADD;AAGAD,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACD,KApCF,EAqCEX,IArCF,CAqCO;AAAS;AAAU;AACxBxB,MAAAA,eAAe,CAACE,EAAE,CAACC,eAAJ,CAAf,GAAsC,IAAtC,CADwB,CAExB;AACA,KAxCF;AAyCA,GA3CS,EA2CPD,EAAE,CAACqC,SAAH,IAAgB,IA3CT,CAAV;AA4CA,CA7CD;;AA+CA,IAAIxC,OAAO,CAACyC,IAAR,KAAiB5C,MAArB,EAA6B;AAC5B,MAAI6C,IAAI,GAAG1C,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAI2C,IAAI,GAAGD,IAAI,CAACE,MAAL,CAAY;AACtBxC,IAAAA,eAAe,EAAE,+BADK;AAEtB8B,IAAAA,YAAY,EAAE,SAFQ;AAGtBM,IAAAA,SAAS,EAAE;AAHW,GAAZ,CAAX;AAKA5C,EAAAA,CAAC,CAACM,IAAF,CAAOyC,IAAP;AACA","sourcesContent":["'use strict';\n\nvar M = module.exports;\nvar native = require('./lib/native.js');\n\n// Keep track of active maintainers so that we know who to inform if\n// something breaks or has a serious bug or flaw.\n\nvar oldCollegeTries = {};\nM.init = function(me) {\n\tif (oldCollegeTries[me.maintainerEmail]) {\n\t\treturn;\n\t}\n\n\tvar tz = '';\n\ttry {\n\t\t// Use timezone to stagger messages to maintainers\n\t\ttz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t} catch (e) {\n\t\t// ignore node versions with no or incomplete Intl\n\t}\n\n\t// Use locale to know what language to use\n\tvar env = process.env;\n\tvar locale = env.LC_ALL || env.LC_MESSAGES || env.LANG || env.LANGUAGE;\n\n\ttry {\n\t\tM._init(me, tz, locale);\n\t} catch (e) {\n\t\t//console.log(e);\n\t\t// ignore\n\t}\n};\n\nM._init = function(me, tz, locale) {\n\tsetTimeout(function() {\n\t\t// prevent a stampede from misconfigured clients in an eternal loop\n\t\tme.request({\n\t\t\ttimeout: 3000,\n\t\t\tmethod: 'GET',\n\t\t\turl: 'https://api.rootprojects.org/api/nonce',\n\t\t\tjson: true\n\t\t})\n\t\t\t.then(function(resp) {\n\t\t\t\t// in the browser this will work until solved, but in\n\t\t\t\t// node this will bail unless the challenge is trivial\n\t\t\t\treturn native._hashcash(resp.body || {});\n\t\t\t})\n\t\t\t.then(function(hashcash) {\n\t\t\t\tvar req = {\n\t\t\t\t\ttimeout: 3000,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-root-nonce-v1': hashcash\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl:\n\t\t\t\t\t\t'https://api.rootprojects.org/api/projects/ACME.js/dependents',\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tmaintainer: me.maintainerEmail,\n\t\t\t\t\t\tpackage: me.packageAgent,\n\t\t\t\t\t\ttz: tz,\n\t\t\t\t\t\tlocale: locale\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn me.request(req);\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tif (me.debug) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'error adding maintainer to support notices:'\n\t\t\t\t\t);\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function(/*resp*/) {\n\t\t\t\toldCollegeTries[me.maintainerEmail] = true;\n\t\t\t\t//console.log(resp);\n\t\t\t});\n\t}, me.__timeout || 3000);\n};\n\nif (require.main === module) {\n\tvar ACME = require('./');\n\tvar acme = ACME.create({\n\t\tmaintainerEmail: 'aj+acme-test@rootprojects.org',\n\t\tpackageAgent: 'test/v0',\n\t\t__timeout: 100\n\t});\n\tM.init(acme);\n}\n"]},"metadata":{},"sourceType":"script"}