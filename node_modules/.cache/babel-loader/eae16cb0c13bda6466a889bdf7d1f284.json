{"ast":null,"code":"// Copyright 2018-present AJ ONeal. All rights reserved\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n'use strict';\n/* globals Promise */\n\nrequire('@root/encoding/bytes');\n\nvar Enc = require('@root/encoding/base64');\n\nvar ACME = module.exports;\n\nvar Keypairs = require('@root/keypairs');\n\nvar CSR = require('@root/csr');\n\nvar sha2 = require('@root/keypairs/lib/node/sha2.js');\n\nvar http = require('./lib/node/http.js');\n\nvar A = require('./account.js');\n\nvar U = require('./utils.js');\n\nvar E = require('./errors.js');\n\nvar M = require('./maintainers.js');\n\nvar native = require('./lib/native.js');\n\nACME.create = function create(me) {\n  if (!me) {\n    me = {};\n  } // me.debug = true;\n\n\n  me._nonces = [];\n  me._canCheck = {};\n\n  if (!/.+@.+\\..+/.test(me.maintainerEmail)) {\n    throw new Error('you should supply `maintainerEmail` as a contact for security and critical bug notices');\n  }\n\n  if (!/\\w\\/v?\\d/.test(me.packageAgent) && false !== me.packageAgent) {\n    console.error(\"\\nyou should supply `packageAgent` as an rfc7231-style User-Agent such as Foo/v1.1\\n\\n\\t// your package agent should be this:\\n\\tvar pkg = require('./package.json');\\n\\tvar agent = pkg.name + '/' + pkg.version\\n\");\n    process.exit(1);\n    return;\n  }\n\n  if (!me.dns01) {\n    me.dns01 = function (ch) {\n      return native._dns01(me, ch);\n    };\n  }\n\n  if (!me.http01) {\n    // for browser version only\n    if (!me._baseUrl) {\n      me._baseUrl = '';\n    }\n\n    me.http01 = function (ch) {\n      return native._http01(me, ch);\n    };\n  }\n\n  if (!me.__request) {\n    me.__request = http.request;\n  } // passed to dependencies\n\n\n  me.request = function (opts) {\n    return U._request(me, opts);\n  };\n\n  me.init = function (opts) {\n    M.init(me);\n\n    function fin(dir) {\n      me._directoryUrls = dir;\n      me._tos = dir.meta.termsOfService;\n      return dir;\n    }\n\n    if (opts && opts.meta && opts.termsOfService) {\n      return Promise.resolve(fin(opts));\n    }\n\n    if (!me.directoryUrl) {\n      me.directoryUrl = opts;\n    }\n\n    if ('string' !== typeof me.directoryUrl) {\n      throw new Error('you must supply either the ACME directory url as a string or an object of the ACME urls');\n    }\n\n    var p = Promise.resolve();\n\n    if (!me.skipChallengeTest) {\n      p = native._canCheck(me);\n    }\n\n    return p.then(function () {\n      return ACME._directory(me).then(function (resp) {\n        return fin(resp.body);\n      });\n    });\n  };\n\n  me.accounts = {\n    create: function (options) {\n      try {\n        return A._registerAccount(me, options);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  };\n  /*\n  me.authorizations = {\n  \t// create + get challlenges\n  \tget: function(options) {\n  \t\treturn A._getAccountKid(me, options).then(function(kid) {\n  \t\t\tACME._normalizePresenters(me, options, options.challenges);\n  \t\t\treturn ACME._orderCert(me, options, kid).then(function(order) {\n  \t\t\t\treturn order.claims;\n  \t\t\t});\n  \t\t});\n  \t},\n  \t// set challenges, check challenges, finalize order, return order\n  \tpresent: function(options) {\n  \t\treturn A._getAccountKid(me, options).then(function(kid) {\n  \t\t\tACME._normalizePresenters(me, options, options.challenges);\n  \t\t\treturn ACME._finalizeOrder(me, options, kid, options.order);\n  \t\t});\n  \t}\n  };\n   */\n\n  me.certificates = {\n    create: function (options) {\n      return A._getAccountKid(me, options).then(function (kid) {\n        ACME._normalizePresenters(me, options, options.challenges);\n\n        return ACME._getCertificate(me, options, kid);\n      });\n    }\n  };\n  return me;\n}; // http-01: GET https://example.org/.well-known/acme-challenge/{{token}} => {{keyAuth}}\n// dns-01: TXT _acme-challenge.example.org. => \"{{urlSafeBase64(sha256(keyAuth))}}\"\n\n\nACME.challengePrefixes = {\n  'http-01': '/.well-known/acme-challenge',\n  'dns-01': '_acme-challenge'\n};\nACME.challengeTests = {\n  'http-01': function (me, auth) {\n    var ch = auth.challenge;\n    return me.http01(ch).then(function (keyAuth) {\n      var err; // TODO limit the number of bytes that are allowed to be downloaded\n\n      if (ch.keyAuthorization === (keyAuth || '').trim()) {\n        return true;\n      }\n\n      err = new Error('Error: Failed HTTP-01 Pre-Flight / Dry Run.\\n' + \"curl '\" + ch.challengeUrl + \"'\\n\" + \"Expected: '\" + ch.keyAuthorization + \"'\\n\" + \"Got: '\" + keyAuth + \"'\\n\" + 'See https://git.rootprojects.org/root/acme.js/issues/4');\n      err.code = 'E_FAIL_DRY_CHALLENGE';\n      throw err;\n    });\n  },\n  'dns-01': function (me, auth) {\n    // remove leading *. on wildcard domains\n    var ch = auth.challenge;\n    return me.dns01(ch).then(function (ans) {\n      var err;\n\n      if (ans.answer.some(function (txt) {\n        return ch.dnsAuthorization === txt.data[0];\n      })) {\n        return true;\n      }\n\n      err = new Error('Error: Failed DNS-01 Pre-Flight Dry Run.\\n' + \"dig TXT '\" + ch.dnsHost + \"' does not return '\" + ch.dnsAuthorization + \"'\\n\" + 'See https://git.rootprojects.org/root/acme.js/issues/4');\n      err.code = 'E_FAIL_DRY_CHALLENGE';\n      throw err;\n    });\n  }\n};\n\nACME._directory = function (me) {\n  // TODO cache the directory URL\n  // GET-as-GET ok\n  return U._request(me, {\n    method: 'GET',\n    url: me.directoryUrl,\n    json: true\n  });\n}; // registerAccount\n// postChallenge\n// finalizeOrder\n// getCertificate\n\n\nACME._getCertificate = function (me, options, kid) {\n  //#console.debug('[ACME.js] certificates.create');\n  return ACME._orderCert(me, options, kid).then(function (order) {\n    return ACME._finalizeOrder(me, options, kid, order);\n  });\n};\n\nACME._normalizePresenters = function (me, options, presenters) {\n  // Prefer this order for efficiency:\n  // * http-01 is the fasest\n  // * tls-alpn-01 is for networks that don't allow plain traffic\n  // * dns-01 is the slowest (due to DNS propagation),\n  //   but is required for private networks and wildcards\n  var presenterTypes = Object.keys(options.challenges || {});\n  options._presenterTypes = ['http-01', 'tls-alpn-01', 'dns-01'].filter(function (typ) {\n    return -1 !== presenterTypes.indexOf(typ);\n  });\n\n  if (presenters['dns-01'] && 'number' !== typeof presenters['dns-01'].propagationDelay) {\n    if (!ACME._propagationDelayWarning) {\n      var err = new Error(\"dns-01 challenge's `propagationDelay` not set, defaulting to 5000ms\");\n      err.code = 'E_NO_DNS_DELAY';\n      err.description = \"Each dns-01 challenge should specify challenges['dns-01'].propagationDelay as an estimate of how long DNS propagation will take.\";\n\n      ACME._notify(me, options, 'warning', err);\n\n      presenters['dns-01'].propagationDelay = 5000;\n      ACME._propagationDelayWarning = true;\n    }\n  }\n\n  Object.keys(presenters || {}).forEach(function (k) {\n    var ch = presenters[k];\n    var warned = false;\n\n    if (!ch.set || !ch.remove) {\n      throw new Error('challenge plugin must have set() and remove()');\n    }\n\n    if (!ch.get) {\n      if ('dns-01' === k) {\n        console.warn('dns-01 challenge plugin should have get()');\n      } else {\n        throw new Error('http-01 and tls-alpn-01 challenge plugins must have get()');\n      }\n    }\n\n    if ('dns-01' === k) {\n      if (!ch.zones) {\n        console.warn('dns-01 challenge plugin should have zones()');\n      }\n    }\n\n    function warn() {\n      if (warned) {\n        return;\n      }\n\n      warned = true;\n      console.warn(\"'\" + k + \"' may have incorrect function signatures, or contains deprecated use of callbacks\");\n    }\n\n    function promisify(fn) {\n      return function (opts) {\n        new Promise(function (resolve, reject) {\n          fn(opts, function (err, result) {\n            if (err) {\n              reject(err);\n              return;\n            }\n\n            resolve(result);\n          });\n        });\n      };\n    } // init, zones, set, get, remove\n\n\n    if (ch.init && 2 === ch.init.length) {\n      warn();\n      ch._thunk_init = ch.init;\n      ch.init = promisify(ch._thunk_init);\n    }\n\n    if (ch.zones && 2 === ch.zones.length) {\n      warn();\n      ch._thunk_zones = ch.zones;\n      ch.zones = promisify(ch._thunk_zones);\n    }\n\n    if (2 === ch.set.length) {\n      warn();\n      ch._thunk_set = ch.set;\n      ch.set = promisify(ch._thunk_set);\n    }\n\n    if (2 === ch.remove.length) {\n      warn();\n      ch._thunk_remove = ch.remove;\n      ch.remove = promisify(ch._thunk_remove);\n    }\n\n    if (ch.get && 2 === ch.get.length) {\n      warn();\n      ch._thunk_get = ch.get;\n      ch.get = promisify(ch._thunk_get);\n    }\n\n    return ch;\n  });\n};\n/*\n POST /acme/new-order HTTP/1.1\n Host: example.com\n Content-Type: application/jose+json\n\n {\n   \"protected\": base64url({\n     \"alg\": \"ES256\",\n     \"kid\": \"https://example.com/acme/acct/1\",\n     \"nonce\": \"5XJ1L3lEkMG7tR6pA00clA\",\n     \"url\": \"https://example.com/acme/new-order\"\n   }),\n   \"payload\": base64url({\n     \"identifiers\": [{\"type:\"dns\",\"value\":\"example.com\"}],\n     \"notBefore\": \"2016-01-01T00:00:00Z\",\n     \"notAfter\": \"2016-01-08T00:00:00Z\"\n   }),\n   \"signature\": \"H6ZXtGjTZyUnPeKn...wEA4TklBdh3e454g\"\n }\n*/\n\n\nACME._getAuthorization = function (me, options, kid, zonenames, authUrl) {\n  //#console.debug('\\n[DEBUG] getAuthorization\\n');\n  return U._jwsRequest(me, {\n    accountKey: options.accountKey,\n    url: authUrl,\n    protected: {\n      kid: kid\n    },\n    payload: ''\n  }).then(function (resp) {\n    // Pre-emptive rather than lazy for interfaces that need to show the\n    // challenges to the user first\n    return ACME._computeAuths(me, options, '', resp.body, zonenames, false).then(function (auths) {\n      resp.body._rawChallenges = resp.body.challenges;\n      resp.body.challenges = auths;\n      return resp.body;\n    });\n  });\n};\n\nACME._testChallengeOptions = function () {\n  // we want this to be the same for the whole group\n  var chToken = ACME._prnd(16);\n\n  return [{\n    type: 'http-01',\n    status: 'pending',\n    url: 'https://acme-staging-v02.example.com/0',\n    token: 'test-' + chToken + '-0'\n  }, {\n    type: 'dns-01',\n    status: 'pending',\n    url: 'https://acme-staging-v02.example.com/1',\n    token: 'test-' + chToken + '-1',\n    _wildcard: true\n  }, {\n    type: 'tls-alpn-01',\n    status: 'pending',\n    url: 'https://acme-staging-v02.example.com/3',\n    token: 'test-' + chToken + '-3'\n  }];\n};\n\nACME._thumber = function (options, thumb) {\n  var thumbPromise;\n  return function (key) {\n    if (thumb) {\n      return Promise.resolve(thumb);\n    }\n\n    if (thumbPromise) {\n      return thumbPromise;\n    }\n\n    if (!key) {\n      key = options.accountKey || options.accountKeypair;\n    }\n\n    thumbPromise = U._importKeypair(key).then(function (pair) {\n      return Keypairs.thumbprint({\n        jwk: pair.public\n      });\n    });\n    return thumbPromise;\n  };\n};\n\nACME._dryRun = function (me, realOptions, zonenames) {\n  var noopts = {};\n  Object.keys(realOptions).forEach(function (key) {\n    noopts[key] = realOptions[key];\n  });\n  noopts.order = {}; // memoized so that it doesn't run until it's first called\n\n  var getThumbprint = ACME._thumber(noopts, '');\n\n  return Promise.all(noopts.domains.map(function (identifierValue) {\n    // TODO we really only need one to pass, not all to pass\n    var challenges = ACME._testChallengeOptions();\n\n    var wild = '*.' === identifierValue.slice(0, 2);\n\n    if (wild) {\n      challenges = challenges.filter(function (ch) {\n        return ch._wildcard;\n      });\n    }\n\n    challenges = challenges.filter(function (auth) {\n      return me._canCheck[auth.type];\n    });\n    return getThumbprint().then(function (accountKeyThumb) {\n      var resp = {\n        body: {\n          identifier: {\n            type: 'dns',\n            value: identifierValue.replace(/^\\*\\./, '')\n          },\n          challenges: challenges,\n          expires: new Date(Date.now() + 60 * 1000).toISOString(),\n          wildcard: identifierValue.includes('*.') || undefined\n        }\n      }; // The dry-run comes first in the spirit of \"fail fast\"\n      // (and protecting against challenge failure rate limits)\n\n      var dryrun = true;\n      return ACME._computeAuths(me, noopts, accountKeyThumb, resp.body, zonenames, dryrun).then(function (auths) {\n        resp.body.challenges = auths;\n        return resp.body;\n      });\n    });\n  })).then(function (claims) {\n    var selected = [];\n    noopts.order._claims = claims.slice(0);\n\n    noopts.notify = function (ev, params) {\n      if ('_challenge_select' === ev) {\n        selected.push(params.challenge);\n      }\n    };\n\n    function clear() {\n      selected.forEach(function (ch) {\n        ACME._notify(me, noopts, 'challenge_remove', {\n          altname: ch.altname,\n          type: ch.type //challenge: ch\n\n        }); // ignore promise return\n\n\n        noopts.challenges[ch.type].remove({\n          challenge: ch\n        }).catch(function (err) {\n          err.action = 'challenge_remove';\n          err.altname = ch.altname;\n          err.type = ch.type;\n\n          ACME._notify(me, noopts, 'error', err);\n        });\n      });\n    }\n\n    return ACME._setChallenges(me, noopts, noopts.order).catch(function (err) {\n      clear();\n      throw err;\n    }).then(clear);\n  });\n}; // Get the list of challenge types we can validate,\n// which is already ordered by preference.\n// Select the first matching offered challenge type\n\n\nACME._chooseChallenge = function (options, results) {\n  // For each of the challenge types that we support\n  var challenge;\n\n  options._presenterTypes.some(function (chType) {\n    // And for each of the challenge types that are allowed\n    return results.challenges.some(function (ch) {\n      // Check to see if there are any matches\n      if (ch.type === chType) {\n        challenge = ch;\n        return true;\n      }\n    });\n  });\n\n  return challenge;\n};\n\nACME._getZones = function (me, challenges, domains) {\n  var presenter = challenges['dns-01'];\n\n  if (!presenter) {\n    return Promise.resolve([]);\n  }\n\n  if ('function' !== typeof presenter.zones) {\n    return Promise.resolve([]);\n  } // a little bit of random to ensure that getZones()\n  // actually returns the zones and not the hosts as zones\n\n\n  var dnsHosts = domains.map(function (d) {\n    var rnd = ACME._prnd(2);\n\n    return rnd + '.' + d;\n  });\n  var authChallenge = {\n    type: 'dns-01',\n    dnsHosts: dnsHosts\n  };\n  return presenter.zones({\n    challenge: authChallenge\n  });\n};\n\nACME._challengesMap = {\n  'http-01': 0,\n  'dns-01': 0,\n  'tls-alpn-01': 0\n};\n\nACME._computeAuths = function (me, options, thumb, authz, zonenames, dryrun) {\n  // we don't poison the dns cache with our dummy request\n  var dnsPrefix = ACME.challengePrefixes['dns-01'];\n\n  if (dryrun) {\n    dnsPrefix = dnsPrefix.replace('acme-challenge', 'greenlock-dryrun-' + ACME._prnd(4));\n  }\n\n  var getThumbprint = ACME._thumber(options, thumb);\n\n  return Promise.all(authz.challenges.map(function (challenge) {\n    // Don't do extra work for challenges that we can't satisfy\n    var _types = options._presenterTypes;\n\n    if (_types && !_types.includes(challenge.type)) {\n      return null;\n    }\n\n    var auth = {}; // straight copy from the new order response\n    // { identifier, status, expires, challenges, wildcard }\n\n    Object.keys(authz).forEach(function (key) {\n      auth[key] = authz[key];\n    }); // copy from the challenge we've chosen\n    // { type, status, url, token }\n    // (note the duplicate status overwrites the one above, but they should be the same)\n\n    Object.keys(challenge).forEach(function (key) {\n      // don't confused devs with the id url\n      auth[key] = challenge[key];\n    }); // batteries-included helpers\n\n    auth.hostname = auth.identifier.value; // because I'm not 100% clear if the wildcard identifier does or doesn't\n    // have the leading *. in all cases\n\n    auth.altname = ACME._untame(auth.identifier.value, auth.wildcard);\n    var zone = pluckZone(zonenames || [], auth.identifier.value);\n    return ACME.computeChallenge({\n      accountKey: options.accountKey,\n      _getThumbprint: getThumbprint,\n      challenge: auth,\n      zone: zone,\n      dnsPrefix: dnsPrefix\n    }).then(function (resp) {\n      Object.keys(resp).forEach(function (k) {\n        auth[k] = resp[k];\n      });\n      return auth;\n    });\n  })).then(function (auths) {\n    return auths.filter(Boolean);\n  });\n};\n\nACME.computeChallenge = function (opts) {\n  var auth = opts.challenge;\n  var hostname = auth.hostname || opts.hostname;\n  var zone = opts.zone;\n  var thumb = opts.thumbprint || '';\n  var accountKey = opts.accountKey;\n\n  var getThumbprint = opts._getThumbprint || ACME._thumber(opts, thumb);\n\n  var dnsPrefix = opts.dnsPrefix || ACME.challengePrefixes['dns-01'];\n  return getThumbprint(accountKey).then(function (thumb) {\n    var resp = {};\n    resp.thumbprint = thumb; //   keyAuthorization = token + '.' + base64url(JWK_Thumbprint(accountKey))\n\n    resp.keyAuthorization = auth.token + '.' + thumb;\n\n    if ('http-01' === auth.type) {\n      // conflicts with ACME challenge id url is already in use,\n      // so we call this challengeUrl instead\n      // TODO auth.http01Url ?\n      resp.challengeUrl = 'http://' + // `hostname` is an alias of `auth.indentifier.value`\n      hostname + ACME.challengePrefixes['http-01'] + '/' + auth.token;\n    }\n\n    if ('dns-01' !== auth.type) {\n      return resp;\n    } // Always calculate dnsAuthorization because we\n    // may need to present to the user for confirmation / instruction\n    // _as part of_ the decision making process\n\n\n    return sha2.sum(256, resp.keyAuthorization).then(function (hash) {\n      return Enc.bufToUrlBase64(Uint8Array.from(hash));\n    }).then(function (hash64) {\n      resp.dnsHost = dnsPrefix + '.' + hostname; // .replace('*.', '');\n      // deprecated\n\n      resp.dnsAuthorization = hash64; // should use this instead\n\n      resp.keyAuthorizationDigest = hash64;\n\n      if (zone) {\n        resp.dnsZone = zone;\n        resp.dnsPrefix = resp.dnsHost.replace(newZoneRegExp(zone), '').replace(/\\.$/, '');\n      }\n\n      return resp;\n    });\n  });\n};\n\nACME._untame = function (name, wild) {\n  if (wild) {\n    name = '*.' + name.replace('*.', '');\n  }\n\n  return name;\n}; // https://tools.ietf.org/html/draft-ietf-acme-acme-10#section-7.5.1\n\n\nACME._postChallenge = function (me, options, kid, auth) {\n  var RETRY_INTERVAL = me.retryInterval || 1000;\n  var DEAUTH_INTERVAL = me.deauthWait || 10 * 1000;\n  var MAX_POLL = me.retryPoll || 8;\n  var MAX_PEND = me.retryPending || 4;\n  var count = 0;\n\n  var altname = ACME._untame(auth.identifier.value, auth.wildcard);\n  /*\n    POST /acme/authz/1234 HTTP/1.1\n    Host: example.com\n    Content-Type: application/jose+json\n     {\n      \"protected\": base64url({\n        \"alg\": \"ES256\",\n        \"kid\": \"https://example.com/acme/acct/1\",\n        \"nonce\": \"xWCM9lGbIyCgue8di6ueWQ\",\n        \"url\": \"https://example.com/acme/authz/1234\"\n      }),\n      \"payload\": base64url({\n        \"status\": \"deactivated\"\n      }),\n      \"signature\": \"srX9Ji7Le9bjszhu...WTFdtujObzMtZcx4\"\n    }\n    */\n\n\n  function deactivate() {\n    //#console.debug('[ACME.js] deactivate:');\n    return U._jwsRequest(me, {\n      accountKey: options.accountKey,\n      url: auth.url,\n      protected: {\n        kid: kid\n      },\n      payload: Enc.strToBuf(JSON.stringify({\n        status: 'deactivated'\n      }))\n    }).then(function ()\n    /*#resp*/\n    {\n      //#console.debug('deactivate challenge: resp.body:');\n      //#console.debug(resp.body);\n      return ACME._wait(DEAUTH_INTERVAL);\n    });\n  }\n\n  function pollStatus() {\n    if (count >= MAX_POLL) {\n      var err = new Error(\"[ACME.js] stuck in bad pending/processing state for '\" + altname + \"'\");\n      err.context = 'present_challenge';\n      return Promise.reject(err);\n    }\n\n    count += 1; //#console.debug('\\n[DEBUG] statusChallenge\\n');\n    // POST-as-GET\n\n    return U._jwsRequest(me, {\n      accountKey: options.accountKey,\n      url: auth.url,\n      protected: {\n        kid: kid\n      },\n      payload: Enc.binToBuf('')\n    }).then(checkResult).catch(transformError);\n  }\n\n  function checkResult(resp) {\n    ACME._notify(me, options, 'challenge_status', {\n      // API-locked\n      status: resp.body.status,\n      type: auth.type,\n      altname: altname\n    });\n\n    if ('processing' === resp.body.status) {\n      //#console.debug('poll: again', auth.url);\n      return ACME._wait(RETRY_INTERVAL).then(pollStatus);\n    } // This state should never occur\n\n\n    if ('pending' === resp.body.status) {\n      if (count >= MAX_PEND) {\n        return ACME._wait(RETRY_INTERVAL).then(deactivate).then(respondToChallenge);\n      } //#console.debug('poll: again', auth.url);\n\n\n      return ACME._wait(RETRY_INTERVAL).then(respondToChallenge);\n    } // REMOVE DNS records as soon as the state is non-processing\n    // (valid or invalid or other)\n\n\n    try {\n      options.challenges[auth.type].remove({\n        challenge: auth\n      }).catch(function (err) {\n        err.action = 'challenge_remove';\n        err.altname = auth.altname;\n        err.type = auth.type;\n\n        ACME._notify(me, options, 'error', err);\n      });\n    } catch (e) {}\n\n    if ('valid' === resp.body.status) {\n      if (me.debug) {\n        console.debug('poll: valid');\n      }\n\n      return resp.body;\n    }\n\n    var errmsg;\n\n    if (!resp.body.status) {\n      errmsg = \"[ACME.js] (E_STATE_EMPTY) empty challenge state for '\" + altname + \"':\" + JSON.stringify(resp.body);\n    } else if ('invalid' === resp.body.status) {\n      errmsg = \"[ACME.js] (E_STATE_INVALID) challenge state for '\" + altname + \"': '\" + //resp.body.status +\n      JSON.stringify(resp.body) + \"'\";\n    } else {\n      errmsg = \"[ACME.js] (E_STATE_UKN) challenge state for '\" + altname + \"': '\" + resp.body.status + \"'\";\n    }\n\n    return Promise.reject(new Error(errmsg));\n  }\n\n  function transformError(e) {\n    var err = e;\n\n    if (err.urn) {\n      err = new Error('[acme-v2] ' + auth.altname + ' status:' + e.status + ' ' + e.detail);\n      err.auth = auth;\n      err.altname = auth.altname;\n      err.type = auth.type;\n      err.code = 'invalid' === e.status ? 'E_ACME_CHALLENGE' : 'E_ACME_UNKNOWN';\n    }\n\n    throw err;\n  }\n\n  function respondToChallenge() {\n    //#console.debug('[ACME.js] responding to accept challenge:');\n    // POST-as-POST (empty JSON object)\n    return U._jwsRequest(me, {\n      accountKey: options.accountKey,\n      url: auth.url,\n      protected: {\n        kid: kid\n      },\n      payload: Enc.strToBuf(JSON.stringify({}))\n    }).then(checkResult).catch(transformError);\n  }\n\n  return respondToChallenge();\n}; // options = { domains, claims, challenges }\n\n\nACME._setChallenges = function (me, options, order) {\n  var claims = order._claims.slice(0);\n\n  var valids = [];\n  var auths = [];\n  var placed = [];\n  var USE_DNS = false;\n  var DNS_DELAY = 0; // Set any challenges, excpting ones that have already been validated\n\n  function setNext() {\n    var claim = claims.shift(); // check false for testing\n\n    if (!claim || false === options.challenges) {\n      return Promise.resolve();\n    }\n\n    return Promise.resolve().then(function () {\n      // For any challenges that are already valid,\n      // add to the list and skip any checks.\n      if (claim.challenges.some(function (ch) {\n        if ('valid' === ch.status) {\n          valids.push(ch);\n          return true;\n        }\n      })) {\n        return;\n      }\n\n      var selected = ACME._chooseChallenge(options, claim);\n\n      if (!selected) {\n        throw E.NO_SUITABLE_CHALLENGE(claim.altname, claim.challenges, options._presenterTypes);\n      }\n\n      auths.push(selected);\n      placed.push(selected);\n\n      ACME._notify(me, options, 'challenge_select', {\n        // API-locked\n        altname: ACME._untame(claim.identifier.value, claim.wildcard),\n        type: selected.type,\n        dnsHost: selected.dnsHost,\n        keyAuthorization: selected.keyAuthorization\n      });\n\n      ACME._notify(me, options, '_challenge_select', {\n        altname: ACME._untame(claim.identifier.value, claim.wildcard),\n        type: selected.type,\n        challenge: selected\n      }); // Set a delay for nameservers a moment to propagate\n\n\n      if ('dns-01' === selected.type) {\n        if (options.challenges['dns-01'] && !USE_DNS) {\n          USE_DNS = true;\n          DNS_DELAY = parseInt(options.challenges['dns-01'].propagationDelay, 10);\n        }\n      }\n\n      var ch = options.challenges[selected.type] || {};\n\n      if (!ch.set) {\n        throw new Error('no handler for setting challenge');\n      }\n\n      return ch.set({\n        challenge: selected\n      });\n    }).then(setNext);\n  }\n\n  function waitAll() {\n    //#console.debug('\\n[DEBUG] waitChallengeDelay %s\\n', DELAY);\n    if (!DNS_DELAY || DNS_DELAY <= 0) {\n      DNS_DELAY = 5000;\n    }\n\n    return ACME._wait(DNS_DELAY);\n  }\n\n  function checkNext() {\n    var auth = auths.shift();\n\n    if (!auth) {\n      return Promise.resolve(valids);\n    } // These are not as much \"valids\" as they are \"not invalids\"\n\n\n    if (!me._canCheck[auth.type] || me.skipChallengeTest) {\n      valids.push(auth);\n      return checkNext();\n    }\n\n    return ACME.challengeTests[auth.type](me, {\n      challenge: auth\n    }).then(function () {\n      valids.push(auth);\n    }).then(checkNext);\n  }\n\n  function removeAll(ch) {\n    options.challenges[ch.type].remove({\n      challenge: ch\n    }).catch(function (err) {\n      err.action = 'challenge_remove';\n      err.altname = ch.altname;\n      err.type = ch.type;\n\n      ACME._notify(me, options, 'error', err);\n    });\n  } // The reason we set every challenge in a batch first before checking any\n  // is so that we don't poison our own DNS cache with misses.\n\n\n  return setNext().then(waitAll).then(checkNext).catch(function (err) {\n    if (!options.debug) {\n      placed.forEach(removeAll);\n    }\n\n    throw err;\n  });\n};\n\nACME._presentChallenges = function (me, options, kid, readyToPresent) {\n  // Actually sets the challenge via ACME\n  function challengeNext() {\n    // First set, First presented\n    var auth = readyToPresent.shift();\n\n    if (!auth) {\n      return Promise.resolve();\n    }\n\n    return ACME._postChallenge(me, options, kid, auth).then(challengeNext);\n  } // BTW, these are done serially rather than parallel on purpose\n  // (rate limits, propagation delays, etc)\n\n\n  return challengeNext().then(function () {\n    return readyToPresent;\n  });\n};\n\nACME._pollOrderStatus = function (me, options, kid, order, verifieds) {\n  var csr64 = ACME._csrToUrlBase64(options.csr);\n\n  var body = {\n    csr: csr64\n  };\n  var payload = JSON.stringify(body);\n\n  function pollCert() {\n    //#console.debug('[ACME.js] pollCert:', order._finalizeUrl);\n    return U._jwsRequest(me, {\n      accountKey: options.accountKey,\n      url: order._finalizeUrl,\n      protected: {\n        kid: kid\n      },\n      payload: Enc.strToBuf(payload)\n    }).then(function (resp) {\n      ACME._notify(me, options, 'certificate_status', {\n        subject: options.domains[0],\n        status: resp.body.status\n      }); // https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.3\n      // Possible values are: \"pending\" => (\"invalid\" || \"ready\") => \"processing\" => \"valid\"\n\n\n      if ('valid' === resp.body.status) {\n        var voucher = resp.body;\n        voucher._certificateUrl = resp.body.certificate;\n        return voucher;\n      }\n\n      if ('processing' === resp.body.status) {\n        return ACME._wait().then(pollCert);\n      }\n\n      if (me.debug) {\n        console.debug('Error: bad status:\\n' + JSON.stringify(resp.body, null, 2));\n      }\n\n      if ('pending' === resp.body.status) {\n        return Promise.reject(new Error(\"Did not finalize order: status 'pending'.\" + ' Best guess: You have not accepted at least one challenge for each domain:\\n' + \"Requested: '\" + options.domains.join(', ') + \"'\\n\" + \"Validated: '\" + verifieds.join(', ') + \"'\\n\" + JSON.stringify(resp.body, null, 2)));\n      }\n\n      if ('invalid' === resp.body.status) {\n        return Promise.reject(E.ORDER_INVALID(options, verifieds, resp));\n      }\n\n      if ('ready' === resp.body.status) {\n        return Promise.reject(E.DOUBLE_READY_ORDER(options, verifieds, resp));\n      }\n\n      return Promise.reject(E.UNHANDLED_ORDER_STATUS(options, verifieds, resp));\n    });\n  }\n\n  return pollCert();\n};\n\nACME._redeemCert = function (me, options, kid, voucher) {\n  //#console.debug('ACME.js: order was finalized');\n  // POST-as-GET\n  return U._jwsRequest(me, {\n    accountKey: options.accountKey,\n    url: voucher._certificateUrl,\n    protected: {\n      kid: kid\n    },\n    payload: Enc.binToBuf(''),\n    json: true\n  }).then(function (resp) {\n    //#console.debug('ACME.js: csr submitted and cert received:');\n    // https://github.com/certbot/certbot/issues/5721\n    var certsarr = ACME.splitPemChain(ACME.formatPemChain(resp.body || '')); //  cert, chain, fullchain, privkey, /*TODO, subject, altnames, issuedAt, expiresAt */\n\n    var certs = {\n      expires: voucher.expires,\n      identifiers: voucher.identifiers,\n      //, authorizations: order.authorizations\n      cert: certsarr.shift(),\n      //, privkey: privkeyPem\n      chain: certsarr.join('\\n')\n    }; //#console.debug(certs);\n\n    return certs;\n  });\n};\n\nACME._finalizeOrder = function (me, options, kid, order) {\n  //#console.debug('[ACME.js] finalizeOrder:');\n  var readyToPresent;\n  return A._getAccountKid(me, options).then(function (kid) {\n    return ACME._setChallenges(me, options, order).then(function (_readyToPresent) {\n      readyToPresent = _readyToPresent;\n      return ACME._presentChallenges(me, options, kid, readyToPresent);\n    }).then(function () {\n      return ACME._pollOrderStatus(me, options, kid, order, readyToPresent.map(function (ch) {\n        return ACME._untame(ch.identifier.value, ch.wildcard);\n      }));\n    }).then(function (voucher) {\n      return ACME._redeemCert(me, options, kid, voucher);\n    });\n  });\n}; // Order a certificate request with all domains\n\n\nACME._orderCert = function (me, options, kid) {\n  var certificateRequest = {\n    // raw wildcard syntax MUST be used here\n    identifiers: options.domains.map(function (hostname) {\n      return {\n        type: 'dns',\n        value: hostname\n      };\n    }) //, \"notBefore\": \"2016-01-01T00:00:00Z\"\n    //, \"notAfter\": \"2016-01-08T00:00:00Z\"\n\n  };\n  return ACME._prepRequest(me, options).then(function () {\n    return ACME._getZones(me, options.challenges, options.domains);\n  }).then(function (zonenames) {\n    var p; // Do a little dry-run / self-test\n\n    if (!me.skipDryRun && !options.skipDryRun) {\n      p = ACME._dryRun(me, options, zonenames);\n    } else {\n      p = Promise.resolve(null);\n    }\n\n    return p.then(function () {\n      return A._getAccountKid(me, options).then(function (kid) {\n        ACME._notify(me, options, 'certificate_order', {\n          // API-locked\n          account: {\n            key: {\n              kid: kid\n            }\n          },\n          subject: options.domains[0],\n          altnames: options.domains,\n          challengeTypes: options._presenterTypes\n        });\n\n        var payload = JSON.stringify(certificateRequest); //#console.debug('\\n[DEBUG] newOrder\\n');\n\n        return U._jwsRequest(me, {\n          accountKey: options.accountKey,\n          url: me._directoryUrls.newOrder,\n          protected: {\n            kid: kid\n          },\n          payload: Enc.binToBuf(payload)\n        });\n      }).then(function (resp) {\n        var order = resp.body;\n        order._orderUrl = resp.headers.location;\n        order._finalizeUrl = resp.body.finalize;\n        order._identifiers = certificateRequest.identifiers; //#console.debug('[ordered]', location); // the account id url\n        //#console.debug(resp);\n\n        if (!order.authorizations) {\n          return Promise.reject(E.NO_AUTHORIZATIONS(options, resp));\n        }\n\n        return order;\n      }).then(function (order) {\n        return ACME._getAllChallenges(me, options, kid, zonenames, order).then(function (claims) {\n          order._claims = claims;\n          return order;\n        });\n      });\n    });\n  });\n};\n\nACME._prepRequest = function (me, options) {\n  return Promise.resolve().then(function () {\n    // TODO check that all presenterTypes are represented in challenges\n    if (!options._presenterTypes.length) {\n      return Promise.reject(new Error('options.challenges must be specified'));\n    }\n\n    if (!options.csr) {\n      throw new Error('no `csr` option given (should be in DER or PEM format)');\n    } // TODO validate csr signature?\n\n\n    var _csr = CSR._info(options.csr);\n\n    options.domains = options.domains || _csr.altnames;\n    _csr.altnames = _csr.altnames || [];\n\n    if (options.domains.slice(0).sort().join(' ') !== _csr.altnames.slice(0).sort().join(' ')) {\n      return Promise.reject(new Error('certificate altnames do not match requested domains'));\n    }\n\n    if (_csr.subject !== options.domains[0]) {\n      return Promise.reject(new Error('certificate subject (commonName) does not match first altname (SAN)'));\n    }\n\n    if (!(options.domains && options.domains.length)) {\n      return Promise.reject(new Error('options.domains must be a list of string domain names,' + ' with the first being the subject of the certificate'));\n    } // a cheap check to see if there are non-ascii characters in any of the domains\n\n\n    var nonAsciiDomains = options.domains.some(function (d) {\n      // IDN / unicode / utf-8 / punycode\n      return Enc.strToBin(d) !== d;\n    });\n\n    if (nonAsciiDomains) {\n      throw new Error(\"please use the 'punycode' module to convert unicode domain names to punycode\");\n    } // TODO Promise.all()?\n\n\n    (options._presenterTypes || []).forEach(function (key) {\n      var presenter = options.challenges[key];\n\n      if ('function' === typeof presenter.init && !presenter._acme_initialized) {\n        presenter._acme_initialized = true;\n        return presenter.init({\n          type: '*',\n          request: me.request\n        });\n      }\n    });\n  });\n}; // Request a challenge for each authorization in the order\n\n\nACME._getAllChallenges = function (me, options, kid, zonenames, order) {\n  var claims = []; //#console.debug(\"[acme-v2] POST newOrder has authorizations\");\n\n  var challengeAuths = order.authorizations.slice(0);\n\n  function getNext() {\n    var authUrl = challengeAuths.shift();\n\n    if (!authUrl) {\n      return claims;\n    }\n\n    return ACME._getAuthorization(me, options, kid, zonenames, authUrl).then(function (claim) {\n      // var domain = options.domains[i]; // claim.identifier.value\n      claims.push(claim);\n      return getNext();\n    });\n  }\n\n  return getNext().then(function () {\n    return claims;\n  });\n};\n\nACME.formatPemChain = function formatPemChain(str) {\n  return str.trim().replace(/[\\r\\n]+/g, '\\n').replace(/\\-\\n\\-/g, '-\\n\\n-') + '\\n';\n};\n\nACME.splitPemChain = function splitPemChain(str) {\n  return str.trim().split(/[\\r\\n]{2,}/g).map(function (str) {\n    return str + '\\n';\n  });\n};\n\nACME._csrToUrlBase64 = function (csr) {\n  // if der, convert to base64\n  if ('string' !== typeof csr) {\n    csr = Enc.bufToUrlBase64(csr);\n  } // TODO use PEM.parseBlock()\n  // nix PEM headers, if any\n\n\n  if ('-' === csr[0]) {\n    csr = csr.split(/\\n+/).slice(1, -1).join('');\n  }\n\n  return Enc.base64ToUrlBase64(csr.trim().replace(/\\s+/g, ''));\n}; // In v8 this is crypto random, but we're just using it for pseudorandom\n\n\nACME._prnd = function (n) {\n  var rnd = '';\n\n  while (rnd.length / 2 < n) {\n    var i = Math.random().toString().substr(2);\n    var h = parseInt(i, 10).toString(16);\n\n    if (h.length % 2) {\n      h = '0' + h;\n    }\n\n    rnd += h;\n  }\n\n  return rnd.substr(0, n * 2);\n};\n\nACME._notify = function (me, options, ev, params) {\n  if (!options.notify && !me.notify) {\n    //console.info(ev, params);\n    return;\n  }\n\n  try {\n    (options.notify || me.notify)(ev, params);\n  } catch (e) {\n    console.error('`acme.notify(ev, params)` Error:');\n    console.error(e);\n  }\n};\n\nACME._wait = function wait(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms || 1100);\n  });\n};\n\nfunction newZoneRegExp(zonename) {\n  // (^|\\.)example\\.com$\n  // which matches:\n  //  foo.example.com\n  //  example.com\n  // but not:\n  //  fooexample.com\n  return new RegExp('(^|\\\\.)' + zonename.replace(/\\./g, '\\\\.') + '$');\n}\n\nfunction pluckZone(zonenames, dnsHost) {\n  return zonenames.filter(function (zonename) {\n    // the only character that needs to be escaped for regex\n    // and is allowed in a domain name is '.'\n    return newZoneRegExp(zonename).test(dnsHost);\n  }).sort(function (a, b) {\n    // longest match first\n    return b.length - a.length;\n  })[0];\n}","map":{"version":3,"sources":["C:/Users/xuwen/Desktop/INFO340/project-2-xuwensi/node_modules/@root/acme/acme.js"],"names":["require","Enc","ACME","module","exports","Keypairs","CSR","sha2","http","A","U","E","M","native","create","me","_nonces","_canCheck","test","maintainerEmail","Error","packageAgent","console","error","process","exit","dns01","ch","_dns01","http01","_baseUrl","_http01","__request","request","opts","_request","init","fin","dir","_directoryUrls","_tos","meta","termsOfService","Promise","resolve","directoryUrl","p","skipChallengeTest","then","_directory","resp","body","accounts","options","_registerAccount","e","reject","certificates","_getAccountKid","kid","_normalizePresenters","challenges","_getCertificate","challengePrefixes","challengeTests","auth","challenge","keyAuth","err","keyAuthorization","trim","challengeUrl","code","ans","answer","some","txt","dnsAuthorization","data","dnsHost","method","url","json","_orderCert","order","_finalizeOrder","presenters","presenterTypes","Object","keys","_presenterTypes","filter","typ","indexOf","propagationDelay","_propagationDelayWarning","description","_notify","forEach","k","warned","set","remove","get","warn","zones","promisify","fn","result","length","_thunk_init","_thunk_zones","_thunk_set","_thunk_remove","_thunk_get","_getAuthorization","zonenames","authUrl","_jwsRequest","accountKey","protected","payload","_computeAuths","auths","_rawChallenges","_testChallengeOptions","chToken","_prnd","type","status","token","_wildcard","_thumber","thumb","thumbPromise","key","accountKeypair","_importKeypair","pair","thumbprint","jwk","public","_dryRun","realOptions","noopts","getThumbprint","all","domains","map","identifierValue","wild","slice","accountKeyThumb","identifier","value","replace","expires","Date","now","toISOString","wildcard","includes","undefined","dryrun","claims","selected","_claims","notify","ev","params","push","clear","altname","catch","action","_setChallenges","_chooseChallenge","results","chType","_getZones","presenter","dnsHosts","d","rnd","authChallenge","_challengesMap","authz","dnsPrefix","_types","hostname","_untame","zone","pluckZone","computeChallenge","_getThumbprint","Boolean","sum","hash","bufToUrlBase64","Uint8Array","from","hash64","keyAuthorizationDigest","dnsZone","newZoneRegExp","name","_postChallenge","RETRY_INTERVAL","retryInterval","DEAUTH_INTERVAL","deauthWait","MAX_POLL","retryPoll","MAX_PEND","retryPending","count","deactivate","strToBuf","JSON","stringify","_wait","pollStatus","context","binToBuf","checkResult","transformError","respondToChallenge","debug","errmsg","urn","detail","valids","placed","USE_DNS","DNS_DELAY","setNext","claim","shift","NO_SUITABLE_CHALLENGE","parseInt","waitAll","checkNext","removeAll","_presentChallenges","readyToPresent","challengeNext","_pollOrderStatus","verifieds","csr64","_csrToUrlBase64","csr","pollCert","_finalizeUrl","subject","voucher","_certificateUrl","certificate","join","ORDER_INVALID","DOUBLE_READY_ORDER","UNHANDLED_ORDER_STATUS","_redeemCert","certsarr","splitPemChain","formatPemChain","certs","identifiers","cert","chain","_readyToPresent","certificateRequest","_prepRequest","skipDryRun","account","altnames","challengeTypes","newOrder","_orderUrl","headers","location","finalize","_identifiers","authorizations","NO_AUTHORIZATIONS","_getAllChallenges","_csr","_info","sort","nonAsciiDomains","strToBin","_acme_initialized","challengeAuths","getNext","str","split","base64ToUrlBase64","n","i","Math","random","toString","substr","h","wait","ms","setTimeout","zonename","RegExp","a","b"],"mappings":"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","sourcesContent":["// Copyright 2018-present AJ ONeal. All rights reserved\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n'use strict';\n/* globals Promise */\n\nrequire('@root/encoding/bytes');\nvar Enc = require('@root/encoding/base64');\nvar ACME = module.exports;\nvar Keypairs = require('@root/keypairs');\nvar CSR = require('@root/csr');\nvar sha2 = require('@root/keypairs/lib/node/sha2.js');\nvar http = require('./lib/node/http.js');\nvar A = require('./account.js');\nvar U = require('./utils.js');\nvar E = require('./errors.js');\nvar M = require('./maintainers.js');\n\nvar native = require('./lib/native.js');\n\nACME.create = function create(me) {\n\tif (!me) {\n\t\tme = {};\n\t}\n\n\t// me.debug = true;\n\tme._nonces = [];\n\tme._canCheck = {};\n\n\tif (!/.+@.+\\..+/.test(me.maintainerEmail)) {\n\t\tthrow new Error(\n\t\t\t'you should supply `maintainerEmail` as a contact for security and critical bug notices'\n\t\t);\n\t}\n\n\tif (!/\\w\\/v?\\d/.test(me.packageAgent) && false !== me.packageAgent) {\n\t\tconsole.error(\n\t\t\t\"\\nyou should supply `packageAgent` as an rfc7231-style User-Agent such as Foo/v1.1\\n\\n\\t// your package agent should be this:\\n\\tvar pkg = require('./package.json');\\n\\tvar agent = pkg.name + '/' + pkg.version\\n\"\n\t\t);\n\t\tprocess.exit(1);\n\t\treturn;\n\t}\n\n\tif (!me.dns01) {\n\t\tme.dns01 = function(ch) {\n\t\t\treturn native._dns01(me, ch);\n\t\t};\n\t}\n\n\tif (!me.http01) {\n\t\t// for browser version only\n\t\tif (!me._baseUrl) {\n\t\t\tme._baseUrl = '';\n\t\t}\n\t\tme.http01 = function(ch) {\n\t\t\treturn native._http01(me, ch);\n\t\t};\n\t}\n\n\tif (!me.__request) {\n\t\tme.__request = http.request;\n\t}\n\t// passed to dependencies\n\tme.request = function(opts) {\n\t\treturn U._request(me, opts);\n\t};\n\n\tme.init = function(opts) {\n\t\tM.init(me);\n\n\t\tfunction fin(dir) {\n\t\t\tme._directoryUrls = dir;\n\t\t\tme._tos = dir.meta.termsOfService;\n\t\t\treturn dir;\n\t\t}\n\t\tif (opts && opts.meta && opts.termsOfService) {\n\t\t\treturn Promise.resolve(fin(opts));\n\t\t}\n\t\tif (!me.directoryUrl) {\n\t\t\tme.directoryUrl = opts;\n\t\t}\n\t\tif ('string' !== typeof me.directoryUrl) {\n\t\t\tthrow new Error(\n\t\t\t\t'you must supply either the ACME directory url as a string or an object of the ACME urls'\n\t\t\t);\n\t\t}\n\n\t\tvar p = Promise.resolve();\n\t\tif (!me.skipChallengeTest) {\n\t\t\tp = native._canCheck(me);\n\t\t}\n\t\treturn p.then(function() {\n\t\t\treturn ACME._directory(me).then(function(resp) {\n\t\t\t\treturn fin(resp.body);\n\t\t\t});\n\t\t});\n\t};\n\tme.accounts = {\n\t\tcreate: function(options) {\n\t\t\ttry {\n\t\t\t\treturn A._registerAccount(me, options);\n\t\t\t} catch (e) {\n\t\t\t\treturn Promise.reject(e);\n\t\t\t}\n\t\t}\n\t};\n\t/*\n\tme.authorizations = {\n\t\t// create + get challlenges\n\t\tget: function(options) {\n\t\t\treturn A._getAccountKid(me, options).then(function(kid) {\n\t\t\t\tACME._normalizePresenters(me, options, options.challenges);\n\t\t\t\treturn ACME._orderCert(me, options, kid).then(function(order) {\n\t\t\t\t\treturn order.claims;\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t// set challenges, check challenges, finalize order, return order\n\t\tpresent: function(options) {\n\t\t\treturn A._getAccountKid(me, options).then(function(kid) {\n\t\t\t\tACME._normalizePresenters(me, options, options.challenges);\n\t\t\t\treturn ACME._finalizeOrder(me, options, kid, options.order);\n\t\t\t});\n\t\t}\n\t};\n  */\n\tme.certificates = {\n\t\tcreate: function(options) {\n\t\t\treturn A._getAccountKid(me, options).then(function(kid) {\n\t\t\t\tACME._normalizePresenters(me, options, options.challenges);\n\t\t\t\treturn ACME._getCertificate(me, options, kid);\n\t\t\t});\n\t\t}\n\t};\n\treturn me;\n};\n\n// http-01: GET https://example.org/.well-known/acme-challenge/{{token}} => {{keyAuth}}\n// dns-01: TXT _acme-challenge.example.org. => \"{{urlSafeBase64(sha256(keyAuth))}}\"\nACME.challengePrefixes = {\n\t'http-01': '/.well-known/acme-challenge',\n\t'dns-01': '_acme-challenge'\n};\nACME.challengeTests = {\n\t'http-01': function(me, auth) {\n\t\tvar ch = auth.challenge;\n\t\treturn me.http01(ch).then(function(keyAuth) {\n\t\t\tvar err;\n\n\t\t\t// TODO limit the number of bytes that are allowed to be downloaded\n\t\t\tif (ch.keyAuthorization === (keyAuth || '').trim()) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\terr = new Error(\n\t\t\t\t'Error: Failed HTTP-01 Pre-Flight / Dry Run.\\n' +\n\t\t\t\t\t\"curl '\" +\n\t\t\t\t\tch.challengeUrl +\n\t\t\t\t\t\"'\\n\" +\n\t\t\t\t\t\"Expected: '\" +\n\t\t\t\t\tch.keyAuthorization +\n\t\t\t\t\t\"'\\n\" +\n\t\t\t\t\t\"Got: '\" +\n\t\t\t\t\tkeyAuth +\n\t\t\t\t\t\"'\\n\" +\n\t\t\t\t\t'See https://git.rootprojects.org/root/acme.js/issues/4'\n\t\t\t);\n\t\t\terr.code = 'E_FAIL_DRY_CHALLENGE';\n\t\t\tthrow err;\n\t\t});\n\t},\n\t'dns-01': function(me, auth) {\n\t\t// remove leading *. on wildcard domains\n\t\tvar ch = auth.challenge;\n\t\treturn me.dns01(ch).then(function(ans) {\n\t\t\tvar err;\n\n\t\t\tif (\n\t\t\t\tans.answer.some(function(txt) {\n\t\t\t\t\treturn ch.dnsAuthorization === txt.data[0];\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\terr = new Error(\n\t\t\t\t'Error: Failed DNS-01 Pre-Flight Dry Run.\\n' +\n\t\t\t\t\t\"dig TXT '\" +\n\t\t\t\t\tch.dnsHost +\n\t\t\t\t\t\"' does not return '\" +\n\t\t\t\t\tch.dnsAuthorization +\n\t\t\t\t\t\"'\\n\" +\n\t\t\t\t\t'See https://git.rootprojects.org/root/acme.js/issues/4'\n\t\t\t);\n\t\t\terr.code = 'E_FAIL_DRY_CHALLENGE';\n\t\t\tthrow err;\n\t\t});\n\t}\n};\n\nACME._directory = function(me) {\n\t// TODO cache the directory URL\n\n\t// GET-as-GET ok\n\treturn U._request(me, { method: 'GET', url: me.directoryUrl, json: true });\n};\n\n// registerAccount\n// postChallenge\n// finalizeOrder\n// getCertificate\nACME._getCertificate = function(me, options, kid) {\n\t//#console.debug('[ACME.js] certificates.create');\n\treturn ACME._orderCert(me, options, kid).then(function(order) {\n\t\treturn ACME._finalizeOrder(me, options, kid, order);\n\t});\n};\nACME._normalizePresenters = function(me, options, presenters) {\n\t// Prefer this order for efficiency:\n\t// * http-01 is the fasest\n\t// * tls-alpn-01 is for networks that don't allow plain traffic\n\t// * dns-01 is the slowest (due to DNS propagation),\n\t//   but is required for private networks and wildcards\n\tvar presenterTypes = Object.keys(options.challenges || {});\n\toptions._presenterTypes = ['http-01', 'tls-alpn-01', 'dns-01'].filter(\n\t\tfunction(typ) {\n\t\t\treturn -1 !== presenterTypes.indexOf(typ);\n\t\t}\n\t);\n\tif (\n\t\tpresenters['dns-01'] &&\n\t\t'number' !== typeof presenters['dns-01'].propagationDelay\n\t) {\n\t\tif (!ACME._propagationDelayWarning) {\n\t\t\tvar err = new Error(\n\t\t\t\t\"dns-01 challenge's `propagationDelay` not set, defaulting to 5000ms\"\n\t\t\t);\n\t\t\terr.code = 'E_NO_DNS_DELAY';\n\t\t\terr.description =\n\t\t\t\t\"Each dns-01 challenge should specify challenges['dns-01'].propagationDelay as an estimate of how long DNS propagation will take.\";\n\t\t\tACME._notify(me, options, 'warning', err);\n\t\t\tpresenters['dns-01'].propagationDelay = 5000;\n\t\t\tACME._propagationDelayWarning = true;\n\t\t}\n\t}\n\tObject.keys(presenters || {}).forEach(function(k) {\n\t\tvar ch = presenters[k];\n\t\tvar warned = false;\n\n\t\tif (!ch.set || !ch.remove) {\n\t\t\tthrow new Error('challenge plugin must have set() and remove()');\n\t\t}\n\t\tif (!ch.get) {\n\t\t\tif ('dns-01' === k) {\n\t\t\t\tconsole.warn('dns-01 challenge plugin should have get()');\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'http-01 and tls-alpn-01 challenge plugins must have get()'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif ('dns-01' === k) {\n\t\t\tif (!ch.zones) {\n\t\t\t\tconsole.warn('dns-01 challenge plugin should have zones()');\n\t\t\t}\n\t\t}\n\n\t\tfunction warn() {\n\t\t\tif (warned) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twarned = true;\n\t\t\tconsole.warn(\n\t\t\t\t\"'\" +\n\t\t\t\t\tk +\n\t\t\t\t\t\"' may have incorrect function signatures, or contains deprecated use of callbacks\"\n\t\t\t);\n\t\t}\n\n\t\tfunction promisify(fn) {\n\t\t\treturn function(opts) {\n\t\t\t\tnew Promise(function(resolve, reject) {\n\t\t\t\t\tfn(opts, function(err, result) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\t// init, zones, set, get, remove\n\t\tif (ch.init && 2 === ch.init.length) {\n\t\t\twarn();\n\t\t\tch._thunk_init = ch.init;\n\t\t\tch.init = promisify(ch._thunk_init);\n\t\t}\n\t\tif (ch.zones && 2 === ch.zones.length) {\n\t\t\twarn();\n\t\t\tch._thunk_zones = ch.zones;\n\t\t\tch.zones = promisify(ch._thunk_zones);\n\t\t}\n\t\tif (2 === ch.set.length) {\n\t\t\twarn();\n\t\t\tch._thunk_set = ch.set;\n\t\t\tch.set = promisify(ch._thunk_set);\n\t\t}\n\t\tif (2 === ch.remove.length) {\n\t\t\twarn();\n\t\t\tch._thunk_remove = ch.remove;\n\t\t\tch.remove = promisify(ch._thunk_remove);\n\t\t}\n\t\tif (ch.get && 2 === ch.get.length) {\n\t\t\twarn();\n\t\t\tch._thunk_get = ch.get;\n\t\t\tch.get = promisify(ch._thunk_get);\n\t\t}\n\n\t\treturn ch;\n\t});\n};\n\n/*\n POST /acme/new-order HTTP/1.1\n Host: example.com\n Content-Type: application/jose+json\n\n {\n   \"protected\": base64url({\n     \"alg\": \"ES256\",\n     \"kid\": \"https://example.com/acme/acct/1\",\n     \"nonce\": \"5XJ1L3lEkMG7tR6pA00clA\",\n     \"url\": \"https://example.com/acme/new-order\"\n   }),\n   \"payload\": base64url({\n     \"identifiers\": [{\"type:\"dns\",\"value\":\"example.com\"}],\n     \"notBefore\": \"2016-01-01T00:00:00Z\",\n     \"notAfter\": \"2016-01-08T00:00:00Z\"\n   }),\n   \"signature\": \"H6ZXtGjTZyUnPeKn...wEA4TklBdh3e454g\"\n }\n*/\nACME._getAuthorization = function(me, options, kid, zonenames, authUrl) {\n\t//#console.debug('\\n[DEBUG] getAuthorization\\n');\n\n\treturn U._jwsRequest(me, {\n\t\taccountKey: options.accountKey,\n\t\turl: authUrl,\n\t\tprotected: { kid: kid },\n\t\tpayload: ''\n\t}).then(function(resp) {\n\t\t// Pre-emptive rather than lazy for interfaces that need to show the\n\t\t// challenges to the user first\n\t\treturn ACME._computeAuths(\n\t\t\tme,\n\t\t\toptions,\n\t\t\t'',\n\t\t\tresp.body,\n\t\t\tzonenames,\n\t\t\tfalse\n\t\t).then(function(auths) {\n\t\t\tresp.body._rawChallenges = resp.body.challenges;\n\t\t\tresp.body.challenges = auths;\n\t\t\treturn resp.body;\n\t\t});\n\t});\n};\n\nACME._testChallengeOptions = function() {\n\t// we want this to be the same for the whole group\n\tvar chToken = ACME._prnd(16);\n\treturn [\n\t\t{\n\t\t\ttype: 'http-01',\n\t\t\tstatus: 'pending',\n\t\t\turl: 'https://acme-staging-v02.example.com/0',\n\t\t\ttoken: 'test-' + chToken + '-0'\n\t\t},\n\t\t{\n\t\t\ttype: 'dns-01',\n\t\t\tstatus: 'pending',\n\t\t\turl: 'https://acme-staging-v02.example.com/1',\n\t\t\ttoken: 'test-' + chToken + '-1',\n\t\t\t_wildcard: true\n\t\t},\n\t\t{\n\t\t\ttype: 'tls-alpn-01',\n\t\t\tstatus: 'pending',\n\t\t\turl: 'https://acme-staging-v02.example.com/3',\n\t\t\ttoken: 'test-' + chToken + '-3'\n\t\t}\n\t];\n};\n\nACME._thumber = function(options, thumb) {\n\tvar thumbPromise;\n\treturn function(key) {\n\t\tif (thumb) {\n\t\t\treturn Promise.resolve(thumb);\n\t\t}\n\t\tif (thumbPromise) {\n\t\t\treturn thumbPromise;\n\t\t}\n\t\tif (!key) {\n\t\t\tkey = options.accountKey || options.accountKeypair;\n\t\t}\n\t\tthumbPromise = U._importKeypair(key).then(function(pair) {\n\t\t\treturn Keypairs.thumbprint({\n\t\t\t\tjwk: pair.public\n\t\t\t});\n\t\t});\n\t\treturn thumbPromise;\n\t};\n};\n\nACME._dryRun = function(me, realOptions, zonenames) {\n\tvar noopts = {};\n\tObject.keys(realOptions).forEach(function(key) {\n\t\tnoopts[key] = realOptions[key];\n\t});\n\tnoopts.order = {};\n\n\t// memoized so that it doesn't run until it's first called\n\tvar getThumbprint = ACME._thumber(noopts, '');\n\n\treturn Promise.all(\n\t\tnoopts.domains.map(function(identifierValue) {\n\t\t\t// TODO we really only need one to pass, not all to pass\n\t\t\tvar challenges = ACME._testChallengeOptions();\n\t\t\tvar wild = '*.' === identifierValue.slice(0, 2);\n\t\t\tif (wild) {\n\t\t\t\tchallenges = challenges.filter(function(ch) {\n\t\t\t\t\treturn ch._wildcard;\n\t\t\t\t});\n\t\t\t}\n\t\t\tchallenges = challenges.filter(function(auth) {\n\t\t\t\treturn me._canCheck[auth.type];\n\t\t\t});\n\n\t\t\treturn getThumbprint().then(function(accountKeyThumb) {\n\t\t\t\tvar resp = {\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tidentifier: {\n\t\t\t\t\t\t\ttype: 'dns',\n\t\t\t\t\t\t\tvalue: identifierValue.replace(/^\\*\\./, '')\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchallenges: challenges,\n\t\t\t\t\t\texpires: new Date(Date.now() + 60 * 1000).toISOString(),\n\t\t\t\t\t\twildcard: identifierValue.includes('*.') || undefined\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// The dry-run comes first in the spirit of \"fail fast\"\n\t\t\t\t// (and protecting against challenge failure rate limits)\n\t\t\t\tvar dryrun = true;\n\t\t\t\treturn ACME._computeAuths(\n\t\t\t\t\tme,\n\t\t\t\t\tnoopts,\n\t\t\t\t\taccountKeyThumb,\n\t\t\t\t\tresp.body,\n\t\t\t\t\tzonenames,\n\t\t\t\t\tdryrun\n\t\t\t\t).then(function(auths) {\n\t\t\t\t\tresp.body.challenges = auths;\n\t\t\t\t\treturn resp.body;\n\t\t\t\t});\n\t\t\t});\n\t\t})\n\t).then(function(claims) {\n\t\tvar selected = [];\n\t\tnoopts.order._claims = claims.slice(0);\n\t\tnoopts.notify = function(ev, params) {\n\t\t\tif ('_challenge_select' === ev) {\n\t\t\t\tselected.push(params.challenge);\n\t\t\t}\n\t\t};\n\n\t\tfunction clear() {\n\t\t\tselected.forEach(function(ch) {\n\t\t\t\tACME._notify(me, noopts, 'challenge_remove', {\n\t\t\t\t\taltname: ch.altname,\n\t\t\t\t\ttype: ch.type\n\t\t\t\t\t//challenge: ch\n\t\t\t\t});\n\t\t\t\t// ignore promise return\n\t\t\t\tnoopts.challenges[ch.type]\n\t\t\t\t\t.remove({ challenge: ch })\n\t\t\t\t\t.catch(function(err) {\n\t\t\t\t\t\terr.action = 'challenge_remove';\n\t\t\t\t\t\terr.altname = ch.altname;\n\t\t\t\t\t\terr.type = ch.type;\n\t\t\t\t\t\tACME._notify(me, noopts, 'error', err);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn ACME._setChallenges(me, noopts, noopts.order)\n\t\t\t.catch(function(err) {\n\t\t\t\tclear();\n\t\t\t\tthrow err;\n\t\t\t})\n\t\t\t.then(clear);\n\t});\n};\n\n// Get the list of challenge types we can validate,\n// which is already ordered by preference.\n// Select the first matching offered challenge type\nACME._chooseChallenge = function(options, results) {\n\t// For each of the challenge types that we support\n\tvar challenge;\n\toptions._presenterTypes.some(function(chType) {\n\t\t// And for each of the challenge types that are allowed\n\t\treturn results.challenges.some(function(ch) {\n\t\t\t// Check to see if there are any matches\n\t\t\tif (ch.type === chType) {\n\t\t\t\tchallenge = ch;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn challenge;\n};\n\nACME._getZones = function(me, challenges, domains) {\n\tvar presenter = challenges['dns-01'];\n\tif (!presenter) {\n\t\treturn Promise.resolve([]);\n\t}\n\tif ('function' !== typeof presenter.zones) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\t// a little bit of random to ensure that getZones()\n\t// actually returns the zones and not the hosts as zones\n\tvar dnsHosts = domains.map(function(d) {\n\t\tvar rnd = ACME._prnd(2);\n\t\treturn rnd + '.' + d;\n\t});\n\n\tvar authChallenge = {\n\t\ttype: 'dns-01',\n\t\tdnsHosts: dnsHosts\n\t};\n\n\treturn presenter.zones({ challenge: authChallenge });\n};\n\nACME._challengesMap = { 'http-01': 0, 'dns-01': 0, 'tls-alpn-01': 0 };\nACME._computeAuths = function(me, options, thumb, authz, zonenames, dryrun) {\n\t// we don't poison the dns cache with our dummy request\n\tvar dnsPrefix = ACME.challengePrefixes['dns-01'];\n\tif (dryrun) {\n\t\tdnsPrefix = dnsPrefix.replace(\n\t\t\t'acme-challenge',\n\t\t\t'greenlock-dryrun-' + ACME._prnd(4)\n\t\t);\n\t}\n\n\tvar getThumbprint = ACME._thumber(options, thumb);\n\n\treturn Promise.all(\n\t\tauthz.challenges.map(function(challenge) {\n\t\t\t// Don't do extra work for challenges that we can't satisfy\n\t\t\tvar _types = options._presenterTypes;\n\t\t\tif (_types && !_types.includes(challenge.type)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar auth = {};\n\n\t\t\t// straight copy from the new order response\n\t\t\t// { identifier, status, expires, challenges, wildcard }\n\t\t\tObject.keys(authz).forEach(function(key) {\n\t\t\t\tauth[key] = authz[key];\n\t\t\t});\n\n\t\t\t// copy from the challenge we've chosen\n\t\t\t// { type, status, url, token }\n\t\t\t// (note the duplicate status overwrites the one above, but they should be the same)\n\t\t\tObject.keys(challenge).forEach(function(key) {\n\t\t\t\t// don't confused devs with the id url\n\t\t\t\tauth[key] = challenge[key];\n\t\t\t});\n\n\t\t\t// batteries-included helpers\n\t\t\tauth.hostname = auth.identifier.value;\n\t\t\t// because I'm not 100% clear if the wildcard identifier does or doesn't\n\t\t\t// have the leading *. in all cases\n\t\t\tauth.altname = ACME._untame(auth.identifier.value, auth.wildcard);\n\n\t\t\tvar zone = pluckZone(zonenames || [], auth.identifier.value);\n\n\t\t\treturn ACME.computeChallenge({\n\t\t\t\taccountKey: options.accountKey,\n\t\t\t\t_getThumbprint: getThumbprint,\n\t\t\t\tchallenge: auth,\n\t\t\t\tzone: zone,\n\t\t\t\tdnsPrefix: dnsPrefix\n\t\t\t}).then(function(resp) {\n\t\t\t\tObject.keys(resp).forEach(function(k) {\n\t\t\t\t\tauth[k] = resp[k];\n\t\t\t\t});\n\t\t\t\treturn auth;\n\t\t\t});\n\t\t})\n\t).then(function(auths) {\n\t\treturn auths.filter(Boolean);\n\t});\n};\n\nACME.computeChallenge = function(opts) {\n\tvar auth = opts.challenge;\n\tvar hostname = auth.hostname || opts.hostname;\n\tvar zone = opts.zone;\n\tvar thumb = opts.thumbprint || '';\n\tvar accountKey = opts.accountKey;\n\tvar getThumbprint = opts._getThumbprint || ACME._thumber(opts, thumb);\n\tvar dnsPrefix = opts.dnsPrefix || ACME.challengePrefixes['dns-01'];\n\n\treturn getThumbprint(accountKey).then(function(thumb) {\n\t\tvar resp = {};\n\t\tresp.thumbprint = thumb;\n\t\t//   keyAuthorization = token + '.' + base64url(JWK_Thumbprint(accountKey))\n\t\tresp.keyAuthorization = auth.token + '.' + thumb;\n\n\t\tif ('http-01' === auth.type) {\n\t\t\t// conflicts with ACME challenge id url is already in use,\n\t\t\t// so we call this challengeUrl instead\n\t\t\t// TODO auth.http01Url ?\n\t\t\tresp.challengeUrl =\n\t\t\t\t'http://' +\n\t\t\t\t// `hostname` is an alias of `auth.indentifier.value`\n\t\t\t\thostname +\n\t\t\t\tACME.challengePrefixes['http-01'] +\n\t\t\t\t'/' +\n\t\t\t\tauth.token;\n\t\t}\n\n\t\tif ('dns-01' !== auth.type) {\n\t\t\treturn resp;\n\t\t}\n\n\t\t// Always calculate dnsAuthorization because we\n\t\t// may need to present to the user for confirmation / instruction\n\t\t// _as part of_ the decision making process\n\t\treturn sha2\n\t\t\t.sum(256, resp.keyAuthorization)\n\t\t\t.then(function(hash) {\n\t\t\t\treturn Enc.bufToUrlBase64(Uint8Array.from(hash));\n\t\t\t})\n\t\t\t.then(function(hash64) {\n\t\t\t\tresp.dnsHost = dnsPrefix + '.' + hostname; // .replace('*.', '');\n\n\t\t\t\t// deprecated\n\t\t\t\tresp.dnsAuthorization = hash64;\n\t\t\t\t// should use this instead\n\t\t\t\tresp.keyAuthorizationDigest = hash64;\n\n\t\t\t\tif (zone) {\n\t\t\t\t\tresp.dnsZone = zone;\n\t\t\t\t\tresp.dnsPrefix = resp.dnsHost\n\t\t\t\t\t\t.replace(newZoneRegExp(zone), '')\n\t\t\t\t\t\t.replace(/\\.$/, '');\n\t\t\t\t}\n\n\t\t\t\treturn resp;\n\t\t\t});\n\t});\n};\n\nACME._untame = function(name, wild) {\n\tif (wild) {\n\t\tname = '*.' + name.replace('*.', '');\n\t}\n\treturn name;\n};\n\n// https://tools.ietf.org/html/draft-ietf-acme-acme-10#section-7.5.1\nACME._postChallenge = function(me, options, kid, auth) {\n\tvar RETRY_INTERVAL = me.retryInterval || 1000;\n\tvar DEAUTH_INTERVAL = me.deauthWait || 10 * 1000;\n\tvar MAX_POLL = me.retryPoll || 8;\n\tvar MAX_PEND = me.retryPending || 4;\n\tvar count = 0;\n\n\tvar altname = ACME._untame(auth.identifier.value, auth.wildcard);\n\n\t/*\n   POST /acme/authz/1234 HTTP/1.1\n   Host: example.com\n   Content-Type: application/jose+json\n\n   {\n     \"protected\": base64url({\n       \"alg\": \"ES256\",\n       \"kid\": \"https://example.com/acme/acct/1\",\n       \"nonce\": \"xWCM9lGbIyCgue8di6ueWQ\",\n       \"url\": \"https://example.com/acme/authz/1234\"\n     }),\n     \"payload\": base64url({\n       \"status\": \"deactivated\"\n     }),\n     \"signature\": \"srX9Ji7Le9bjszhu...WTFdtujObzMtZcx4\"\n   }\n   */\n\tfunction deactivate() {\n\t\t//#console.debug('[ACME.js] deactivate:');\n\t\treturn U._jwsRequest(me, {\n\t\t\taccountKey: options.accountKey,\n\t\t\turl: auth.url,\n\t\t\tprotected: { kid: kid },\n\t\t\tpayload: Enc.strToBuf(JSON.stringify({ status: 'deactivated' }))\n\t\t}).then(function(/*#resp*/) {\n\t\t\t//#console.debug('deactivate challenge: resp.body:');\n\t\t\t//#console.debug(resp.body);\n\t\t\treturn ACME._wait(DEAUTH_INTERVAL);\n\t\t});\n\t}\n\n\tfunction pollStatus() {\n\t\tif (count >= MAX_POLL) {\n\t\t\tvar err = new Error(\n\t\t\t\t\"[ACME.js] stuck in bad pending/processing state for '\" +\n\t\t\t\t\taltname +\n\t\t\t\t\t\"'\"\n\t\t\t);\n\t\t\terr.context = 'present_challenge';\n\t\t\treturn Promise.reject(err);\n\t\t}\n\n\t\tcount += 1;\n\n\t\t//#console.debug('\\n[DEBUG] statusChallenge\\n');\n\t\t// POST-as-GET\n\t\treturn U._jwsRequest(me, {\n\t\t\taccountKey: options.accountKey,\n\t\t\turl: auth.url,\n\t\t\tprotected: { kid: kid },\n\t\t\tpayload: Enc.binToBuf('')\n\t\t})\n\t\t\t.then(checkResult)\n\t\t\t.catch(transformError);\n\t}\n\n\tfunction checkResult(resp) {\n\t\tACME._notify(me, options, 'challenge_status', {\n\t\t\t// API-locked\n\t\t\tstatus: resp.body.status,\n\t\t\ttype: auth.type,\n\t\t\taltname: altname\n\t\t});\n\n\t\tif ('processing' === resp.body.status) {\n\t\t\t//#console.debug('poll: again', auth.url);\n\t\t\treturn ACME._wait(RETRY_INTERVAL).then(pollStatus);\n\t\t}\n\n\t\t// This state should never occur\n\t\tif ('pending' === resp.body.status) {\n\t\t\tif (count >= MAX_PEND) {\n\t\t\t\treturn ACME._wait(RETRY_INTERVAL)\n\t\t\t\t\t.then(deactivate)\n\t\t\t\t\t.then(respondToChallenge);\n\t\t\t}\n\t\t\t//#console.debug('poll: again', auth.url);\n\t\t\treturn ACME._wait(RETRY_INTERVAL).then(respondToChallenge);\n\t\t}\n\n\t\t// REMOVE DNS records as soon as the state is non-processing\n\t\t// (valid or invalid or other)\n\t\ttry {\n\t\t\toptions.challenges[auth.type]\n\t\t\t\t.remove({ challenge: auth })\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\terr.action = 'challenge_remove';\n\t\t\t\t\terr.altname = auth.altname;\n\t\t\t\t\terr.type = auth.type;\n\t\t\t\t\tACME._notify(me, options, 'error', err);\n\t\t\t\t});\n\t\t} catch (e) {}\n\n\t\tif ('valid' === resp.body.status) {\n\t\t\tif (me.debug) {\n\t\t\t\tconsole.debug('poll: valid');\n\t\t\t}\n\n\t\t\treturn resp.body;\n\t\t}\n\n\t\tvar errmsg;\n\t\tif (!resp.body.status) {\n\t\t\terrmsg =\n\t\t\t\t\"[ACME.js] (E_STATE_EMPTY) empty challenge state for '\" +\n\t\t\t\taltname +\n\t\t\t\t\"':\" +\n\t\t\t\tJSON.stringify(resp.body);\n\t\t} else if ('invalid' === resp.body.status) {\n\t\t\terrmsg =\n\t\t\t\t\"[ACME.js] (E_STATE_INVALID) challenge state for '\" +\n\t\t\t\taltname +\n\t\t\t\t\"': '\" +\n\t\t\t\t//resp.body.status +\n\t\t\t\tJSON.stringify(resp.body) +\n\t\t\t\t\"'\";\n\t\t} else {\n\t\t\terrmsg =\n\t\t\t\t\"[ACME.js] (E_STATE_UKN) challenge state for '\" +\n\t\t\t\taltname +\n\t\t\t\t\"': '\" +\n\t\t\t\tresp.body.status +\n\t\t\t\t\"'\";\n\t\t}\n\n\t\treturn Promise.reject(new Error(errmsg));\n\t}\n\n\tfunction transformError(e) {\n\t\tvar err = e;\n\t\tif (err.urn) {\n\t\t\terr = new Error(\n\t\t\t\t'[acme-v2] ' +\n\t\t\t\t\tauth.altname +\n\t\t\t\t\t' status:' +\n\t\t\t\t\te.status +\n\t\t\t\t\t' ' +\n\t\t\t\t\te.detail\n\t\t\t);\n\t\t\terr.auth = auth;\n\t\t\terr.altname = auth.altname;\n\t\t\terr.type = auth.type;\n\t\t\terr.code =\n\t\t\t\t'invalid' === e.status ? 'E_ACME_CHALLENGE' : 'E_ACME_UNKNOWN';\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\tfunction respondToChallenge() {\n\t\t//#console.debug('[ACME.js] responding to accept challenge:');\n\t\t// POST-as-POST (empty JSON object)\n\t\treturn U._jwsRequest(me, {\n\t\t\taccountKey: options.accountKey,\n\t\t\turl: auth.url,\n\t\t\tprotected: { kid: kid },\n\t\t\tpayload: Enc.strToBuf(JSON.stringify({}))\n\t\t})\n\t\t\t.then(checkResult)\n\t\t\t.catch(transformError);\n\t}\n\n\treturn respondToChallenge();\n};\n\n// options = { domains, claims, challenges }\nACME._setChallenges = function(me, options, order) {\n\tvar claims = order._claims.slice(0);\n\tvar valids = [];\n\tvar auths = [];\n\tvar placed = [];\n\tvar USE_DNS = false;\n\tvar DNS_DELAY = 0;\n\n\t// Set any challenges, excpting ones that have already been validated\n\tfunction setNext() {\n\t\tvar claim = claims.shift();\n\t\t// check false for testing\n\t\tif (!claim || false === options.challenges) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.resolve()\n\t\t\t.then(function() {\n\t\t\t\t// For any challenges that are already valid,\n\t\t\t\t// add to the list and skip any checks.\n\t\t\t\tif (\n\t\t\t\t\tclaim.challenges.some(function(ch) {\n\t\t\t\t\t\tif ('valid' === ch.status) {\n\t\t\t\t\t\t\tvalids.push(ch);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar selected = ACME._chooseChallenge(options, claim);\n\t\t\t\tif (!selected) {\n\t\t\t\t\tthrow E.NO_SUITABLE_CHALLENGE(\n\t\t\t\t\t\tclaim.altname,\n\t\t\t\t\t\tclaim.challenges,\n\t\t\t\t\t\toptions._presenterTypes\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tauths.push(selected);\n\t\t\t\tplaced.push(selected);\n\t\t\t\tACME._notify(me, options, 'challenge_select', {\n\t\t\t\t\t// API-locked\n\t\t\t\t\taltname: ACME._untame(\n\t\t\t\t\t\tclaim.identifier.value,\n\t\t\t\t\t\tclaim.wildcard\n\t\t\t\t\t),\n\t\t\t\t\ttype: selected.type,\n\t\t\t\t\tdnsHost: selected.dnsHost,\n\t\t\t\t\tkeyAuthorization: selected.keyAuthorization\n\t\t\t\t});\n\t\t\t\tACME._notify(me, options, '_challenge_select', {\n\t\t\t\t\taltname: ACME._untame(\n\t\t\t\t\t\tclaim.identifier.value,\n\t\t\t\t\t\tclaim.wildcard\n\t\t\t\t\t),\n\t\t\t\t\ttype: selected.type,\n\t\t\t\t\tchallenge: selected\n\t\t\t\t});\n\n\t\t\t\t// Set a delay for nameservers a moment to propagate\n\t\t\t\tif ('dns-01' === selected.type) {\n\t\t\t\t\tif (options.challenges['dns-01'] && !USE_DNS) {\n\t\t\t\t\t\tUSE_DNS = true;\n\t\t\t\t\t\tDNS_DELAY = parseInt(\n\t\t\t\t\t\t\toptions.challenges['dns-01'].propagationDelay,\n\t\t\t\t\t\t\t10\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar ch = options.challenges[selected.type] || {};\n\t\t\t\tif (!ch.set) {\n\t\t\t\t\tthrow new Error('no handler for setting challenge');\n\t\t\t\t}\n\t\t\t\treturn ch.set({ challenge: selected });\n\t\t\t})\n\t\t\t.then(setNext);\n\t}\n\n\tfunction waitAll() {\n\t\t//#console.debug('\\n[DEBUG] waitChallengeDelay %s\\n', DELAY);\n\t\tif (!DNS_DELAY || DNS_DELAY <= 0) {\n\t\t\tDNS_DELAY = 5000;\n\t\t}\n\t\treturn ACME._wait(DNS_DELAY);\n\t}\n\n\tfunction checkNext() {\n\t\tvar auth = auths.shift();\n\t\tif (!auth) {\n\t\t\treturn Promise.resolve(valids);\n\t\t}\n\n\t\t// These are not as much \"valids\" as they are \"not invalids\"\n\t\tif (!me._canCheck[auth.type] || me.skipChallengeTest) {\n\t\t\tvalids.push(auth);\n\t\t\treturn checkNext();\n\t\t}\n\n\t\treturn ACME.challengeTests[auth.type](me, { challenge: auth })\n\t\t\t.then(function() {\n\t\t\t\tvalids.push(auth);\n\t\t\t})\n\t\t\t.then(checkNext);\n\t}\n\n\tfunction removeAll(ch) {\n\t\toptions.challenges[ch.type]\n\t\t\t.remove({ challenge: ch })\n\t\t\t.catch(function(err) {\n\t\t\t\terr.action = 'challenge_remove';\n\t\t\t\terr.altname = ch.altname;\n\t\t\t\terr.type = ch.type;\n\t\t\t\tACME._notify(me, options, 'error', err);\n\t\t\t});\n\t}\n\n\t// The reason we set every challenge in a batch first before checking any\n\t// is so that we don't poison our own DNS cache with misses.\n\treturn setNext()\n\t\t.then(waitAll)\n\t\t.then(checkNext)\n\t\t.catch(function(err) {\n\t\t\tif (!options.debug) {\n\t\t\t\tplaced.forEach(removeAll);\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n};\n\nACME._presentChallenges = function(me, options, kid, readyToPresent) {\n\t// Actually sets the challenge via ACME\n\tfunction challengeNext() {\n\t\t// First set, First presented\n\t\tvar auth = readyToPresent.shift();\n\t\tif (!auth) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn ACME._postChallenge(me, options, kid, auth).then(challengeNext);\n\t}\n\n\t// BTW, these are done serially rather than parallel on purpose\n\t// (rate limits, propagation delays, etc)\n\treturn challengeNext().then(function() {\n\t\treturn readyToPresent;\n\t});\n};\n\nACME._pollOrderStatus = function(me, options, kid, order, verifieds) {\n\tvar csr64 = ACME._csrToUrlBase64(options.csr);\n\tvar body = { csr: csr64 };\n\tvar payload = JSON.stringify(body);\n\n\tfunction pollCert() {\n\t\t//#console.debug('[ACME.js] pollCert:', order._finalizeUrl);\n\t\treturn U._jwsRequest(me, {\n\t\t\taccountKey: options.accountKey,\n\t\t\turl: order._finalizeUrl,\n\t\t\tprotected: { kid: kid },\n\t\t\tpayload: Enc.strToBuf(payload)\n\t\t}).then(function(resp) {\n\t\t\tACME._notify(me, options, 'certificate_status', {\n\t\t\t\tsubject: options.domains[0],\n\t\t\t\tstatus: resp.body.status\n\t\t\t});\n\n\t\t\t// https://tools.ietf.org/html/draft-ietf-acme-acme-12#section-7.1.3\n\t\t\t// Possible values are: \"pending\" => (\"invalid\" || \"ready\") => \"processing\" => \"valid\"\n\t\t\tif ('valid' === resp.body.status) {\n\t\t\t\tvar voucher = resp.body;\n\t\t\t\tvoucher._certificateUrl = resp.body.certificate;\n\n\t\t\t\treturn voucher;\n\t\t\t}\n\n\t\t\tif ('processing' === resp.body.status) {\n\t\t\t\treturn ACME._wait().then(pollCert);\n\t\t\t}\n\n\t\t\tif (me.debug) {\n\t\t\t\tconsole.debug(\n\t\t\t\t\t'Error: bad status:\\n' + JSON.stringify(resp.body, null, 2)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ('pending' === resp.body.status) {\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Did not finalize order: status 'pending'.\" +\n\t\t\t\t\t\t\t' Best guess: You have not accepted at least one challenge for each domain:\\n' +\n\t\t\t\t\t\t\t\"Requested: '\" +\n\t\t\t\t\t\t\toptions.domains.join(', ') +\n\t\t\t\t\t\t\t\"'\\n\" +\n\t\t\t\t\t\t\t\"Validated: '\" +\n\t\t\t\t\t\t\tverifieds.join(', ') +\n\t\t\t\t\t\t\t\"'\\n\" +\n\t\t\t\t\t\t\tJSON.stringify(resp.body, null, 2)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ('invalid' === resp.body.status) {\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tE.ORDER_INVALID(options, verifieds, resp)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ('ready' === resp.body.status) {\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tE.DOUBLE_READY_ORDER(options, verifieds, resp)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn Promise.reject(\n\t\t\t\tE.UNHANDLED_ORDER_STATUS(options, verifieds, resp)\n\t\t\t);\n\t\t});\n\t}\n\n\treturn pollCert();\n};\n\nACME._redeemCert = function(me, options, kid, voucher) {\n\t//#console.debug('ACME.js: order was finalized');\n\n\t// POST-as-GET\n\treturn U._jwsRequest(me, {\n\t\taccountKey: options.accountKey,\n\t\turl: voucher._certificateUrl,\n\t\tprotected: { kid: kid },\n\t\tpayload: Enc.binToBuf(''),\n\t\tjson: true\n\t}).then(function(resp) {\n\t\t//#console.debug('ACME.js: csr submitted and cert received:');\n\n\t\t// https://github.com/certbot/certbot/issues/5721\n\t\tvar certsarr = ACME.splitPemChain(ACME.formatPemChain(resp.body || ''));\n\t\t//  cert, chain, fullchain, privkey, /*TODO, subject, altnames, issuedAt, expiresAt */\n\t\tvar certs = {\n\t\t\texpires: voucher.expires,\n\t\t\tidentifiers: voucher.identifiers,\n\t\t\t//, authorizations: order.authorizations\n\t\t\tcert: certsarr.shift(),\n\t\t\t//, privkey: privkeyPem\n\t\t\tchain: certsarr.join('\\n')\n\t\t};\n\t\t//#console.debug(certs);\n\t\treturn certs;\n\t});\n};\n\nACME._finalizeOrder = function(me, options, kid, order) {\n\t//#console.debug('[ACME.js] finalizeOrder:');\n\tvar readyToPresent;\n\treturn A._getAccountKid(me, options).then(function(kid) {\n\t\treturn ACME._setChallenges(me, options, order)\n\t\t\t.then(function(_readyToPresent) {\n\t\t\t\treadyToPresent = _readyToPresent;\n\t\t\t\treturn ACME._presentChallenges(\n\t\t\t\t\tme,\n\t\t\t\t\toptions,\n\t\t\t\t\tkid,\n\t\t\t\t\treadyToPresent\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(function() {\n\t\t\t\treturn ACME._pollOrderStatus(\n\t\t\t\t\tme,\n\t\t\t\t\toptions,\n\t\t\t\t\tkid,\n\t\t\t\t\torder,\n\t\t\t\t\treadyToPresent.map(function(ch) {\n\t\t\t\t\t\treturn ACME._untame(ch.identifier.value, ch.wildcard);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(function(voucher) {\n\t\t\t\treturn ACME._redeemCert(me, options, kid, voucher);\n\t\t\t});\n\t});\n};\n\n// Order a certificate request with all domains\nACME._orderCert = function(me, options, kid) {\n\tvar certificateRequest = {\n\t\t// raw wildcard syntax MUST be used here\n\t\tidentifiers: options.domains.map(function(hostname) {\n\t\t\treturn { type: 'dns', value: hostname };\n\t\t})\n\t\t//, \"notBefore\": \"2016-01-01T00:00:00Z\"\n\t\t//, \"notAfter\": \"2016-01-08T00:00:00Z\"\n\t};\n\n\treturn ACME._prepRequest(me, options)\n\t\t.then(function() {\n\t\t\treturn ACME._getZones(me, options.challenges, options.domains);\n\t\t})\n\t\t.then(function(zonenames) {\n\t\t\tvar p;\n\t\t\t// Do a little dry-run / self-test\n\t\t\tif (!me.skipDryRun && !options.skipDryRun) {\n\t\t\t\tp = ACME._dryRun(me, options, zonenames);\n\t\t\t} else {\n\t\t\t\tp = Promise.resolve(null);\n\t\t\t}\n\n\t\t\treturn p.then(function() {\n\t\t\t\treturn A._getAccountKid(me, options)\n\t\t\t\t\t.then(function(kid) {\n\t\t\t\t\t\tACME._notify(me, options, 'certificate_order', {\n\t\t\t\t\t\t\t// API-locked\n\t\t\t\t\t\t\taccount: { key: { kid: kid } },\n\t\t\t\t\t\t\tsubject: options.domains[0],\n\t\t\t\t\t\t\taltnames: options.domains,\n\t\t\t\t\t\t\tchallengeTypes: options._presenterTypes\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar payload = JSON.stringify(certificateRequest);\n\t\t\t\t\t\t//#console.debug('\\n[DEBUG] newOrder\\n');\n\t\t\t\t\t\treturn U._jwsRequest(me, {\n\t\t\t\t\t\t\taccountKey: options.accountKey,\n\t\t\t\t\t\t\turl: me._directoryUrls.newOrder,\n\t\t\t\t\t\t\tprotected: { kid: kid },\n\t\t\t\t\t\t\tpayload: Enc.binToBuf(payload)\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(resp) {\n\t\t\t\t\t\tvar order = resp.body;\n\t\t\t\t\t\torder._orderUrl = resp.headers.location;\n\t\t\t\t\t\torder._finalizeUrl = resp.body.finalize;\n\t\t\t\t\t\torder._identifiers = certificateRequest.identifiers;\n\t\t\t\t\t\t//#console.debug('[ordered]', location); // the account id url\n\t\t\t\t\t\t//#console.debug(resp);\n\n\t\t\t\t\t\tif (!order.authorizations) {\n\t\t\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\t\t\tE.NO_AUTHORIZATIONS(options, resp)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn order;\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(order) {\n\t\t\t\t\t\treturn ACME._getAllChallenges(\n\t\t\t\t\t\t\tme,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tkid,\n\t\t\t\t\t\t\tzonenames,\n\t\t\t\t\t\t\torder\n\t\t\t\t\t\t).then(function(claims) {\n\t\t\t\t\t\t\torder._claims = claims;\n\t\t\t\t\t\t\treturn order;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n};\n\nACME._prepRequest = function(me, options) {\n\treturn Promise.resolve().then(function() {\n\t\t// TODO check that all presenterTypes are represented in challenges\n\t\tif (!options._presenterTypes.length) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error('options.challenges must be specified')\n\t\t\t);\n\t\t}\n\n\t\tif (!options.csr) {\n\t\t\tthrow new Error(\n\t\t\t\t'no `csr` option given (should be in DER or PEM format)'\n\t\t\t);\n\t\t}\n\t\t// TODO validate csr signature?\n\t\tvar _csr = CSR._info(options.csr);\n\t\toptions.domains = options.domains || _csr.altnames;\n\t\t_csr.altnames = _csr.altnames || [];\n\t\tif (\n\t\t\toptions.domains\n\t\t\t\t.slice(0)\n\t\t\t\t.sort()\n\t\t\t\t.join(' ') !==\n\t\t\t_csr.altnames\n\t\t\t\t.slice(0)\n\t\t\t\t.sort()\n\t\t\t\t.join(' ')\n\t\t) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error('certificate altnames do not match requested domains')\n\t\t\t);\n\t\t}\n\t\tif (_csr.subject !== options.domains[0]) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(\n\t\t\t\t\t'certificate subject (commonName) does not match first altname (SAN)'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tif (!(options.domains && options.domains.length)) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(\n\t\t\t\t\t'options.domains must be a list of string domain names,' +\n\t\t\t\t\t\t' with the first being the subject of the certificate'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// a cheap check to see if there are non-ascii characters in any of the domains\n\t\tvar nonAsciiDomains = options.domains.some(function(d) {\n\t\t\t// IDN / unicode / utf-8 / punycode\n\t\t\treturn Enc.strToBin(d) !== d;\n\t\t});\n\t\tif (nonAsciiDomains) {\n\t\t\tthrow new Error(\n\t\t\t\t\"please use the 'punycode' module to convert unicode domain names to punycode\"\n\t\t\t);\n\t\t}\n\n\t\t// TODO Promise.all()?\n\t\t(options._presenterTypes || []).forEach(function(key) {\n\t\t\tvar presenter = options.challenges[key];\n\t\t\tif (\n\t\t\t\t'function' === typeof presenter.init &&\n\t\t\t\t!presenter._acme_initialized\n\t\t\t) {\n\t\t\t\tpresenter._acme_initialized = true;\n\t\t\t\treturn presenter.init({ type: '*', request: me.request });\n\t\t\t}\n\t\t});\n\t});\n};\n\n// Request a challenge for each authorization in the order\nACME._getAllChallenges = function(me, options, kid, zonenames, order) {\n\tvar claims = [];\n\t//#console.debug(\"[acme-v2] POST newOrder has authorizations\");\n\tvar challengeAuths = order.authorizations.slice(0);\n\n\tfunction getNext() {\n\t\tvar authUrl = challengeAuths.shift();\n\t\tif (!authUrl) {\n\t\t\treturn claims;\n\t\t}\n\n\t\treturn ACME._getAuthorization(\n\t\t\tme,\n\t\t\toptions,\n\t\t\tkid,\n\t\t\tzonenames,\n\t\t\tauthUrl\n\t\t).then(function(claim) {\n\t\t\t// var domain = options.domains[i]; // claim.identifier.value\n\t\t\tclaims.push(claim);\n\t\t\treturn getNext();\n\t\t});\n\t}\n\n\treturn getNext().then(function() {\n\t\treturn claims;\n\t});\n};\n\nACME.formatPemChain = function formatPemChain(str) {\n\treturn (\n\t\tstr\n\t\t\t.trim()\n\t\t\t.replace(/[\\r\\n]+/g, '\\n')\n\t\t\t.replace(/\\-\\n\\-/g, '-\\n\\n-') + '\\n'\n\t);\n};\n\nACME.splitPemChain = function splitPemChain(str) {\n\treturn str\n\t\t.trim()\n\t\t.split(/[\\r\\n]{2,}/g)\n\t\t.map(function(str) {\n\t\t\treturn str + '\\n';\n\t\t});\n};\n\nACME._csrToUrlBase64 = function(csr) {\n\t// if der, convert to base64\n\tif ('string' !== typeof csr) {\n\t\tcsr = Enc.bufToUrlBase64(csr);\n\t}\n\n\t// TODO use PEM.parseBlock()\n\t// nix PEM headers, if any\n\tif ('-' === csr[0]) {\n\t\tcsr = csr\n\t\t\t.split(/\\n+/)\n\t\t\t.slice(1, -1)\n\t\t\t.join('');\n\t}\n\treturn Enc.base64ToUrlBase64(csr.trim().replace(/\\s+/g, ''));\n};\n\n// In v8 this is crypto random, but we're just using it for pseudorandom\nACME._prnd = function(n) {\n\tvar rnd = '';\n\twhile (rnd.length / 2 < n) {\n\t\tvar i = Math.random()\n\t\t\t.toString()\n\t\t\t.substr(2);\n\t\tvar h = parseInt(i, 10).toString(16);\n\t\tif (h.length % 2) {\n\t\t\th = '0' + h;\n\t\t}\n\t\trnd += h;\n\t}\n\treturn rnd.substr(0, n * 2);\n};\n\nACME._notify = function(me, options, ev, params) {\n\tif (!options.notify && !me.notify) {\n\t\t//console.info(ev, params);\n\t\treturn;\n\t}\n\ttry {\n\t\t(options.notify || me.notify)(ev, params);\n\t} catch (e) {\n\t\tconsole.error('`acme.notify(ev, params)` Error:');\n\t\tconsole.error(e);\n\t}\n};\n\nACME._wait = function wait(ms) {\n\treturn new Promise(function(resolve) {\n\t\tsetTimeout(resolve, ms || 1100);\n\t});\n};\n\nfunction newZoneRegExp(zonename) {\n\t// (^|\\.)example\\.com$\n\t// which matches:\n\t//  foo.example.com\n\t//  example.com\n\t// but not:\n\t//  fooexample.com\n\treturn new RegExp('(^|\\\\.)' + zonename.replace(/\\./g, '\\\\.') + '$');\n}\n\nfunction pluckZone(zonenames, dnsHost) {\n\treturn zonenames\n\t\t.filter(function(zonename) {\n\t\t\t// the only character that needs to be escaped for regex\n\t\t\t// and is allowed in a domain name is '.'\n\t\t\treturn newZoneRegExp(zonename).test(dnsHost);\n\t\t})\n\t\t.sort(function(a, b) {\n\t\t\t// longest match first\n\t\t\treturn b.length - a.length;\n\t\t})[0];\n}\n"]},"metadata":{},"sourceType":"script"}