{"ast":null,"code":"'use strict';\n\nvar X509 = module.exports; // 1.2.840.10045.3.1.7\n// prime256v1 (ANSI X9.62 named elliptic curve)\n\nvar OBJ_ID_EC = '06 08 2A8648CE3D030107'.replace(/\\s+/g, '').toLowerCase(); // 1.3.132.0.34\n// secp384r1 (SECG (Certicom) named elliptic curve)\n\nvar OBJ_ID_EC_384 = '06 05 2B81040022'.replace(/\\s+/g, '').toLowerCase(); // 1.2.840.10045.2.1\n// ecPublicKey (ANSI X9.62 public key type)\n\nvar OBJ_ID_EC_PUB = '06 07 2A8648CE3D0201'.replace(/\\s+/g, '').toLowerCase();\n\nvar Enc = require('@root/encoding');\n\nvar ASN1 = require('@root/asn1/packer');\n\nvar Asn1 = ASN1.Any;\nvar UInt = ASN1.UInt;\nvar BitStr = ASN1.BitStr;\n\nX509.packPkcs1 = function (jwk) {\n  var n = UInt(Enc.base64ToHex(jwk.n));\n  var e = UInt(Enc.base64ToHex(jwk.e));\n\n  if (!jwk.d) {\n    return Enc.hexToBuf(Asn1('30', n, e));\n  }\n\n  return Enc.hexToBuf(Asn1('30', UInt('00'), n, e, UInt(Enc.base64ToHex(jwk.d)), UInt(Enc.base64ToHex(jwk.p)), UInt(Enc.base64ToHex(jwk.q)), UInt(Enc.base64ToHex(jwk.dp)), UInt(Enc.base64ToHex(jwk.dq)), UInt(Enc.base64ToHex(jwk.qi))));\n};\n\nX509.packSec1 = function (jwk) {\n  var d = Enc.base64ToHex(jwk.d);\n  var x = Enc.base64ToHex(jwk.x);\n  var y = Enc.base64ToHex(jwk.y);\n  var objId = 'P-256' === jwk.crv ? OBJ_ID_EC : OBJ_ID_EC_384;\n  return Enc.hexToBuf(Asn1('30', UInt('01'), Asn1('04', d), Asn1('A0', objId), Asn1('A1', BitStr('04' + x + y))));\n};\n/**\n * take a private jwk and creates a der from it\n * @param {*} jwk\n */\n\n\nX509.packPkcs8 = function (jwk) {\n  if (/RSA/.test(jwk.kty)) {\n    return X509.packPkcs8Rsa(jwk);\n  }\n\n  return X509.packPkcs8Ec(jwk);\n};\n\nX509.packPkcs8Ec = function (jwk) {\n  var d = Enc.base64ToHex(jwk.d);\n  var x = Enc.base64ToHex(jwk.x);\n  var y = Enc.base64ToHex(jwk.y);\n  var objId = 'P-256' === jwk.crv ? OBJ_ID_EC : OBJ_ID_EC_384;\n  return Enc.hexToBuf(Asn1('30', UInt('00'), Asn1('30', OBJ_ID_EC_PUB, objId), Asn1('04', Asn1('30', UInt('01'), Asn1('04', d), Asn1('A1', BitStr('04' + x + y))))));\n};\n\nX509.packPkcs8Rsa = function (jwk) {\n  if (!jwk.d) {\n    // Public RSA\n    return Enc.hexToBuf(Asn1('30', Asn1('30', Asn1('06', '2a864886f70d010101'), Asn1('05')), BitStr(Asn1('30', UInt(Enc.base64ToHex(jwk.n)), UInt(Enc.base64ToHex(jwk.e))))));\n  } // Private RSA\n\n\n  return Enc.hexToBuf(Asn1('30', UInt('00'), Asn1('30', Asn1('06', '2a864886f70d010101'), Asn1('05')), Asn1('04', Asn1('30', UInt('00'), UInt(Enc.base64ToHex(jwk.n)), UInt(Enc.base64ToHex(jwk.e)), UInt(Enc.base64ToHex(jwk.d)), UInt(Enc.base64ToHex(jwk.p)), UInt(Enc.base64ToHex(jwk.q)), UInt(Enc.base64ToHex(jwk.dp)), UInt(Enc.base64ToHex(jwk.dq)), UInt(Enc.base64ToHex(jwk.qi))))));\n};\n\nX509.packSpkiEc = function (jwk) {\n  var x = Enc.base64ToHex(jwk.x);\n  var y = Enc.base64ToHex(jwk.y);\n  var objId = 'P-256' === jwk.crv ? OBJ_ID_EC : OBJ_ID_EC_384;\n  return Enc.hexToBuf(Asn1('30', Asn1('30', OBJ_ID_EC_PUB, objId), BitStr('04' + x + y)));\n};\n\nX509.packSpki = function (jwk) {\n  if (/RSA/i.test(jwk.kty)) {\n    return X509.packPkcs8Rsa(jwk);\n  }\n\n  return X509.packSpkiEc(jwk);\n};\n\nX509.packPkix = X509.packSpki;\n\nX509.packCsrRsaPublicKey = function (jwk) {\n  // Sequence the key\n  var n = UInt(Enc.base64ToHex(jwk.n));\n  var e = UInt(Enc.base64ToHex(jwk.e));\n  var asn1pub = Asn1('30', n, e); // Add the CSR pub key header\n\n  return Asn1('30', Asn1('30', Asn1('06', '2a864886f70d010101'), Asn1('05')), BitStr(asn1pub));\n};\n\nX509.packCsrEcPublicKey = function (jwk) {\n  var ecOid = X509._oids[jwk.crv];\n\n  if (!ecOid) {\n    throw new Error(\"Unsupported namedCurve '\" + jwk.crv + \"'. Supported types are \" + Object.keys(X509._oids));\n  }\n\n  var cmp = '04'; // 04 == x+y, 02 == x-only\n\n  var hxy = ''; // Placeholder. I'm not even sure if compression should be supported.\n\n  if (!jwk.y) {\n    cmp = '02';\n  }\n\n  hxy += Enc.base64ToHex(jwk.x);\n\n  if (jwk.y) {\n    hxy += Enc.base64ToHex(jwk.y);\n  } // 1.2.840.10045.2.1 ecPublicKey\n\n\n  return Asn1('30', Asn1('30', Asn1('06', '2a8648ce3d0201'), Asn1('06', ecOid)), BitStr(cmp + hxy));\n};\n\nX509._oids = {\n  // 1.2.840.10045.3.1.7 prime256v1\n  // (ANSI X9.62 named elliptic curve) (06 08 - 2A 86 48 CE 3D 03 01 07)\n  'P-256': '2a8648ce3d030107',\n  // 1.3.132.0.34 P-384 (06 05 - 2B 81 04 00 22)\n  // (SEC 2 recommended EC domain secp256r1)\n  'P-384': '2b81040022' // requires more logic and isn't a recommended standard\n  // 1.3.132.0.35 P-521 (06 05 - 2B 81 04 00 23)\n  // (SEC 2 alternate P-521)\n  //, 'P-521': '2B 81 04 00 23'\n\n};","map":{"version":3,"sources":["C:/Users/xuwen/Desktop/INFO340/project-2-xuwensi/node_modules/@root/x509/packers.js"],"names":["X509","module","exports","OBJ_ID_EC","replace","toLowerCase","OBJ_ID_EC_384","OBJ_ID_EC_PUB","Enc","require","ASN1","Asn1","Any","UInt","BitStr","packPkcs1","jwk","n","base64ToHex","e","d","hexToBuf","p","q","dp","dq","qi","packSec1","x","y","objId","crv","packPkcs8","test","kty","packPkcs8Rsa","packPkcs8Ec","packSpkiEc","packSpki","packPkix","packCsrRsaPublicKey","asn1pub","packCsrEcPublicKey","ecOid","_oids","Error","Object","keys","cmp","hxy"],"mappings":"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","sourcesContent":["'use strict';\n\nvar X509 = module.exports;\n\n// 1.2.840.10045.3.1.7\n// prime256v1 (ANSI X9.62 named elliptic curve)\nvar OBJ_ID_EC = '06 08 2A8648CE3D030107'.replace(/\\s+/g, '').toLowerCase();\n// 1.3.132.0.34\n// secp384r1 (SECG (Certicom) named elliptic curve)\nvar OBJ_ID_EC_384 = '06 05 2B81040022'.replace(/\\s+/g, '').toLowerCase();\n// 1.2.840.10045.2.1\n// ecPublicKey (ANSI X9.62 public key type)\nvar OBJ_ID_EC_PUB = '06 07 2A8648CE3D0201'.replace(/\\s+/g, '').toLowerCase();\n\nvar Enc = require('@root/encoding');\nvar ASN1 = require('@root/asn1/packer');\nvar Asn1 = ASN1.Any;\nvar UInt = ASN1.UInt;\nvar BitStr = ASN1.BitStr;\n\nX509.packPkcs1 = function(jwk) {\n\tvar n = UInt(Enc.base64ToHex(jwk.n));\n\tvar e = UInt(Enc.base64ToHex(jwk.e));\n\n\tif (!jwk.d) {\n\t\treturn Enc.hexToBuf(Asn1('30', n, e));\n\t}\n\n\treturn Enc.hexToBuf(\n\t\tAsn1(\n\t\t\t'30',\n\t\t\tUInt('00'),\n\t\t\tn,\n\t\t\te,\n\t\t\tUInt(Enc.base64ToHex(jwk.d)),\n\t\t\tUInt(Enc.base64ToHex(jwk.p)),\n\t\t\tUInt(Enc.base64ToHex(jwk.q)),\n\t\t\tUInt(Enc.base64ToHex(jwk.dp)),\n\t\t\tUInt(Enc.base64ToHex(jwk.dq)),\n\t\t\tUInt(Enc.base64ToHex(jwk.qi))\n\t\t)\n\t);\n};\n\nX509.packSec1 = function(jwk) {\n\tvar d = Enc.base64ToHex(jwk.d);\n\tvar x = Enc.base64ToHex(jwk.x);\n\tvar y = Enc.base64ToHex(jwk.y);\n\tvar objId = 'P-256' === jwk.crv ? OBJ_ID_EC : OBJ_ID_EC_384;\n\n\treturn Enc.hexToBuf(\n\t\tAsn1(\n\t\t\t'30',\n\t\t\tUInt('01'),\n\t\t\tAsn1('04', d),\n\t\t\tAsn1('A0', objId),\n\t\t\tAsn1('A1', BitStr('04' + x + y))\n\t\t)\n\t);\n};\n/**\n * take a private jwk and creates a der from it\n * @param {*} jwk\n */\nX509.packPkcs8 = function(jwk) {\n\tif (/RSA/.test(jwk.kty)) {\n\t\treturn X509.packPkcs8Rsa(jwk);\n\t}\n\n\treturn X509.packPkcs8Ec(jwk);\n};\nX509.packPkcs8Ec = function(jwk) {\n\tvar d = Enc.base64ToHex(jwk.d);\n\tvar x = Enc.base64ToHex(jwk.x);\n\tvar y = Enc.base64ToHex(jwk.y);\n\tvar objId = 'P-256' === jwk.crv ? OBJ_ID_EC : OBJ_ID_EC_384;\n\treturn Enc.hexToBuf(\n\t\tAsn1(\n\t\t\t'30',\n\t\t\tUInt('00'),\n\t\t\tAsn1('30', OBJ_ID_EC_PUB, objId),\n\t\t\tAsn1(\n\t\t\t\t'04',\n\t\t\t\tAsn1(\n\t\t\t\t\t'30',\n\t\t\t\t\tUInt('01'),\n\t\t\t\t\tAsn1('04', d),\n\t\t\t\t\tAsn1('A1', BitStr('04' + x + y))\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n};\n\nX509.packPkcs8Rsa = function(jwk) {\n\tif (!jwk.d) {\n\t\t// Public RSA\n\t\treturn Enc.hexToBuf(\n\t\t\tAsn1(\n\t\t\t\t'30',\n\t\t\t\tAsn1('30', Asn1('06', '2a864886f70d010101'), Asn1('05')),\n\t\t\t\tBitStr(\n\t\t\t\t\tAsn1(\n\t\t\t\t\t\t'30',\n\t\t\t\t\t\tUInt(Enc.base64ToHex(jwk.n)),\n\t\t\t\t\t\tUInt(Enc.base64ToHex(jwk.e))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\t// Private RSA\n\treturn Enc.hexToBuf(\n\t\tAsn1(\n\t\t\t'30',\n\t\t\tUInt('00'),\n\t\t\tAsn1('30', Asn1('06', '2a864886f70d010101'), Asn1('05')),\n\t\t\tAsn1(\n\t\t\t\t'04',\n\t\t\t\tAsn1(\n\t\t\t\t\t'30',\n\t\t\t\t\tUInt('00'),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.n)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.e)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.d)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.p)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.q)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.dp)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.dq)),\n\t\t\t\t\tUInt(Enc.base64ToHex(jwk.qi))\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n};\nX509.packSpkiEc = function(jwk) {\n\tvar x = Enc.base64ToHex(jwk.x);\n\tvar y = Enc.base64ToHex(jwk.y);\n\tvar objId = 'P-256' === jwk.crv ? OBJ_ID_EC : OBJ_ID_EC_384;\n\treturn Enc.hexToBuf(\n\t\tAsn1('30', Asn1('30', OBJ_ID_EC_PUB, objId), BitStr('04' + x + y))\n\t);\n};\nX509.packSpki = function(jwk) {\n\tif (/RSA/i.test(jwk.kty)) {\n\t\treturn X509.packPkcs8Rsa(jwk);\n\t}\n\treturn X509.packSpkiEc(jwk);\n};\nX509.packPkix = X509.packSpki;\n\nX509.packCsrRsaPublicKey = function(jwk) {\n\t// Sequence the key\n\tvar n = UInt(Enc.base64ToHex(jwk.n));\n\tvar e = UInt(Enc.base64ToHex(jwk.e));\n\tvar asn1pub = Asn1('30', n, e);\n\n\t// Add the CSR pub key header\n\treturn Asn1(\n\t\t'30',\n\t\tAsn1('30', Asn1('06', '2a864886f70d010101'), Asn1('05')),\n\t\tBitStr(asn1pub)\n\t);\n};\n\nX509.packCsrEcPublicKey = function(jwk) {\n\tvar ecOid = X509._oids[jwk.crv];\n\tif (!ecOid) {\n\t\tthrow new Error(\n\t\t\t\"Unsupported namedCurve '\" +\n\t\t\t\tjwk.crv +\n\t\t\t\t\"'. Supported types are \" +\n\t\t\t\tObject.keys(X509._oids)\n\t\t);\n\t}\n\tvar cmp = '04'; // 04 == x+y, 02 == x-only\n\tvar hxy = '';\n\t// Placeholder. I'm not even sure if compression should be supported.\n\tif (!jwk.y) {\n\t\tcmp = '02';\n\t}\n\thxy += Enc.base64ToHex(jwk.x);\n\tif (jwk.y) {\n\t\thxy += Enc.base64ToHex(jwk.y);\n\t}\n\n\t// 1.2.840.10045.2.1 ecPublicKey\n\treturn Asn1(\n\t\t'30',\n\t\tAsn1('30', Asn1('06', '2a8648ce3d0201'), Asn1('06', ecOid)),\n\t\tBitStr(cmp + hxy)\n\t);\n};\n\nX509._oids = {\n\t// 1.2.840.10045.3.1.7 prime256v1\n\t// (ANSI X9.62 named elliptic curve) (06 08 - 2A 86 48 CE 3D 03 01 07)\n\t'P-256': '2a8648ce3d030107',\n\t// 1.3.132.0.34 P-384 (06 05 - 2B 81 04 00 22)\n\t// (SEC 2 recommended EC domain secp256r1)\n\t'P-384': '2b81040022'\n\t// requires more logic and isn't a recommended standard\n\t// 1.3.132.0.35 P-521 (06 05 - 2B 81 04 00 23)\n\t// (SEC 2 alternate P-521)\n\t//, 'P-521': '2B 81 04 00 23'\n};\n"]},"metadata":{},"sourceType":"script"}