{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xuwen\\\\Desktop\\\\INFO340\\\\project-2-xuwensi\\\\src\\\\MainPage.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from 'firebase/app';\nimport { Nav } from './Nav';\nimport { CreatePost } from './Createpost';\nimport { Footer } from './Footer';\nimport { PostDetail } from './PostDetail';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Mygroup } from './MyGroup';\nimport { Profile } from './Profile';\nimport { EditProfile } from './EditProfile';\nexport class MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchFilter = input => {\n      if (input !== '') {\n        let upperInput = input.toUpperCase();\n        let updatedPost = [];\n\n        for (let eachPost of this.state.initialPost) {\n          if (eachPost.title.toUpperCase().includes(upperInput) || eachPost.content.toUpperCase().includes(upperInput)) {\n            updatedPost.push(eachPost);\n          }\n        }\n\n        console.log(updatedPost);\n        this.setState({\n          post: updatedPost\n        });\n      } else {\n        this.setState({\n          post: this.state.initialPost\n        });\n      }\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.state = {\n      post: [],\n      initialPost: [],\n      searchValue: ''\n    };\n  }\n\n  componentDidMount() {\n    let joinedGroup = firebase.database().ref('posts');\n    joinedGroup.on('value', snapshot => {\n      let obj = snapshot.val();\n\n      if (obj != null) {\n        let objKeys = Object.keys(obj);\n        let groupArray = objKeys.map(key => {\n          let task = obj[key];\n          task.key = key;\n          return task;\n        });\n        this.setState({\n          post: groupArray,\n          initialPost: groupArray\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      useremail: this.props.useremail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"sub-title flex-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Check out these Huskies!\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a className name\",\n      onChange: this.handleSearch,\n      id: \"search-input\",\n      \"aria-label\": \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.searchFilter(this.state.searchValue),\n      className: \"search-icon\",\n      role: \"button\",\n      id: \"searchicon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 144\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 177\n      }\n    }))))), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, this.state.post.map((postList, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: (postList.title, i),\n        className: \"column index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"cardtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, postList.title), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"pb-3\",\n        src: postList.imageSource,\n        alt: postList.title + 'User Profile Image',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"cardcontent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }\n      }, postList.content), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: '/postdetail',\n          useremail: this.props.useremail,\n          data: postList\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button fit btn-block\",\n        \"aria-label\": \"Profile detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 40\n        }\n      }, \"Detail\"))));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/xuwen/Desktop/INFO340/project-2-xuwensi/src/MainPage.js"],"names":["React","Component","Link","FontAwesomeIcon","firebase","Nav","CreatePost","Footer","PostDetail","BrowserRouter","Router","Route","Switch","Redirect","Mygroup","Profile","EditProfile","MainPage","constructor","props","searchFilter","input","upperInput","toUpperCase","updatedPost","eachPost","state","initialPost","title","includes","content","push","console","log","setState","post","handleSearch","event","searchValue","target","value","componentDidMount","joinedGroup","database","ref","on","snapshot","obj","val","objKeys","Object","keys","groupArray","map","key","task","render","useremail","postList","i","imageSource","pathname","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'whatwg-fetch';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport firebase from 'firebase/app';\r\nimport { Nav } from './Nav';\r\nimport { CreatePost } from './Createpost';\r\nimport { Footer } from './Footer';\r\nimport { PostDetail } from './PostDetail';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Mygroup } from './MyGroup';\r\nimport { Profile } from './Profile';\r\nimport { EditProfile } from './EditProfile';\r\n\r\nexport class MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: [],\r\n            initialPost: [],\r\n            searchValue: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let joinedGroup = firebase.database().ref('posts');\r\n        joinedGroup.on('value', (snapshot) => {\r\n            let obj = snapshot.val();\r\n            if (obj != null) {\r\n                let objKeys = Object.keys(obj);\r\n                let groupArray = objKeys.map((key) => {\r\n                    let task = obj[key];\r\n                    task.key = key;\r\n                    return task;\r\n                })\r\n                this.setState({\r\n                    post: groupArray,\r\n                    initialPost: groupArray\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    searchFilter = (input) => {\r\n        if (input !== '') {\r\n            let upperInput = input.toUpperCase()\r\n            let updatedPost = []\r\n            for (let eachPost of (this.state.initialPost)) {\r\n                if (eachPost.title.toUpperCase().includes(upperInput) || eachPost.content.toUpperCase().includes(upperInput)) {\r\n                    updatedPost.push(eachPost)\r\n                }\r\n            }\r\n            console.log(updatedPost)\r\n            this.setState({ post: updatedPost })\r\n        } else {\r\n            this.setState({ post: this.state.initialPost })\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState({ searchValue: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <Nav useremail={this.props.useremail} />\r\n                <section>\r\n                    <div className=\"container container-fluid\">\r\n                        <div className=\"d-flex flex-row justify-content-center\">\r\n                            <h1 className=\"sub-title flex-item\">Check out these Huskies!</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"search-box\">\r\n                            <input type=\"text\" placeholder=\"Search for a className name\" onChange={this.handleSearch} id=\"search-input\" aria-label=\"Search\"></input>\r\n                            <a onClick={() => this.searchFilter(this.state.searchValue)} className=\"search-icon\" role=\"button\" id=\"searchicon\"><i className=\"fas fa-search\"></i><FontAwesomeIcon icon=\"search\" /></a>\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"posts\">\r\n                    <div className=\"row\">\r\n                        {this.state.post.map((postList, i) => {\r\n                            return <div key={postList.title, i} className='column index'>\r\n                                <div className='cards'>\r\n                                    <h3 className='cardtitle'>{postList.title}</h3>\r\n                                    <img className='pb-3' src={postList.imageSource} alt={postList.title + 'User Profile Image'}></img>\r\n                                    <p className='cardcontent'>{postList.content}</p>\r\n                                    <Link to={{\r\n                                        pathname: '/postdetail',\r\n                                        useremail: this.props.useremail,\r\n                                        data: postList\r\n                                    }}><button className=\"button fit btn-block\" aria-label=\"Profile detail\">Detail</button></Link>\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}