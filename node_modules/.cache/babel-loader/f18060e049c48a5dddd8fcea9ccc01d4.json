{"ast":null,"code":"'use strict';\n\nvar native = module.exports;\n\nnative._canCheck = function (me) {\n  me._canCheck = {};\n  return me.request({\n    url: me._baseUrl + '/api/_acme_api_/'\n  }).then(function (resp) {\n    if (resp.body.success) {\n      me._canCheck['http-01'] = true;\n      me._canCheck['dns-01'] = true;\n    }\n  }).catch(function () {// ignore\n  });\n};\n\nnative._dns01 = function (me, ch) {\n  return me.request({\n    url: me._baseUrl + '/api/dns/' + ch.dnsHost + '?type=TXT'\n  }).then(function (resp) {\n    var err;\n\n    if (!resp.body || !Array.isArray(resp.body.answer)) {\n      err = new Error('failed to get DNS response');\n      console.error(err);\n      throw err;\n    }\n\n    if (!resp.body.answer.length) {\n      err = new Error('failed to get DNS answer record in response');\n      console.error(err);\n      throw err;\n    }\n\n    return {\n      answer: resp.body.answer.map(function (ans) {\n        return {\n          data: ans.data,\n          ttl: ans.ttl\n        };\n      })\n    };\n  });\n};\n\nnative._http01 = function (me, ch) {\n  var url = encodeURIComponent(ch.challengeUrl);\n  return me.request({\n    url: me._baseUrl + '/api/http?url=' + url\n  }).then(function (resp) {\n    return resp.body;\n  });\n};","map":{"version":3,"sources":["C:/Users/xuwen/Desktop/INFO340/project-2-xuwensi/node_modules/@root/acme/lib/browser.js"],"names":["native","module","exports","_canCheck","me","request","url","_baseUrl","then","resp","body","success","catch","_dns01","ch","dnsHost","err","Array","isArray","answer","Error","console","error","length","map","ans","data","ttl","_http01","encodeURIComponent","challengeUrl"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,MAAM,CAACC,OAApB;;AAEAF,MAAM,CAACG,SAAP,GAAmB,UAASC,EAAT,EAAa;AAC/BA,EAAAA,EAAE,CAACD,SAAH,GAAe,EAAf;AACA,SAAOC,EAAE,CACPC,OADK,CACG;AAAEC,IAAAA,GAAG,EAAEF,EAAE,CAACG,QAAH,GAAc;AAArB,GADH,EAELC,IAFK,CAEA,UAASC,IAAT,EAAe;AACpB,QAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACtBP,MAAAA,EAAE,CAACD,SAAH,CAAa,SAAb,IAA0B,IAA1B;AACAC,MAAAA,EAAE,CAACD,SAAH,CAAa,QAAb,IAAyB,IAAzB;AACA;AACD,GAPK,EAQLS,KARK,CAQC,YAAW,CACjB;AACA,GAVK,CAAP;AAWA,CAbD;;AAeAZ,MAAM,CAACa,MAAP,GAAgB,UAAST,EAAT,EAAaU,EAAb,EAAiB;AAChC,SAAOV,EAAE,CACPC,OADK,CACG;AACRC,IAAAA,GAAG,EAAEF,EAAE,CAACG,QAAH,GAAc,WAAd,GAA4BO,EAAE,CAACC,OAA/B,GAAyC;AADtC,GADH,EAILP,IAJK,CAIA,UAASC,IAAT,EAAe;AACpB,QAAIO,GAAJ;;AACA,QAAI,CAACP,IAAI,CAACC,IAAN,IAAc,CAACO,KAAK,CAACC,OAAN,CAAcT,IAAI,CAACC,IAAL,CAAUS,MAAxB,CAAnB,EAAoD;AACnDH,MAAAA,GAAG,GAAG,IAAII,KAAJ,CAAU,4BAAV,CAAN;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAcN,GAAd;AACA,YAAMA,GAAN;AACA;;AACD,QAAI,CAACP,IAAI,CAACC,IAAL,CAAUS,MAAV,CAAiBI,MAAtB,EAA8B;AAC7BP,MAAAA,GAAG,GAAG,IAAII,KAAJ,CAAU,6CAAV,CAAN;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAcN,GAAd;AACA,YAAMA,GAAN;AACA;;AACD,WAAO;AACNG,MAAAA,MAAM,EAAEV,IAAI,CAACC,IAAL,CAAUS,MAAV,CAAiBK,GAAjB,CAAqB,UAASC,GAAT,EAAc;AAC1C,eAAO;AAAEC,UAAAA,IAAI,EAAED,GAAG,CAACC,IAAZ;AAAkBC,UAAAA,GAAG,EAAEF,GAAG,CAACE;AAA3B,SAAP;AACA,OAFO;AADF,KAAP;AAKA,GArBK,CAAP;AAsBA,CAvBD;;AAyBA3B,MAAM,CAAC4B,OAAP,GAAiB,UAASxB,EAAT,EAAaU,EAAb,EAAiB;AACjC,MAAIR,GAAG,GAAGuB,kBAAkB,CAACf,EAAE,CAACgB,YAAJ,CAA5B;AACA,SAAO1B,EAAE,CACPC,OADK,CACG;AACRC,IAAAA,GAAG,EAAEF,EAAE,CAACG,QAAH,GAAc,gBAAd,GAAiCD;AAD9B,GADH,EAILE,IAJK,CAIA,UAASC,IAAT,EAAe;AACpB,WAAOA,IAAI,CAACC,IAAZ;AACA,GANK,CAAP;AAOA,CATD","sourcesContent":["'use strict';\n\nvar native = module.exports;\n\nnative._canCheck = function(me) {\n\tme._canCheck = {};\n\treturn me\n\t\t.request({ url: me._baseUrl + '/api/_acme_api_/' })\n\t\t.then(function(resp) {\n\t\t\tif (resp.body.success) {\n\t\t\t\tme._canCheck['http-01'] = true;\n\t\t\t\tme._canCheck['dns-01'] = true;\n\t\t\t}\n\t\t})\n\t\t.catch(function() {\n\t\t\t// ignore\n\t\t});\n};\n\nnative._dns01 = function(me, ch) {\n\treturn me\n\t\t.request({\n\t\t\turl: me._baseUrl + '/api/dns/' + ch.dnsHost + '?type=TXT'\n\t\t})\n\t\t.then(function(resp) {\n\t\t\tvar err;\n\t\t\tif (!resp.body || !Array.isArray(resp.body.answer)) {\n\t\t\t\terr = new Error('failed to get DNS response');\n\t\t\t\tconsole.error(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tif (!resp.body.answer.length) {\n\t\t\t\terr = new Error('failed to get DNS answer record in response');\n\t\t\t\tconsole.error(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tanswer: resp.body.answer.map(function(ans) {\n\t\t\t\t\treturn { data: ans.data, ttl: ans.ttl };\n\t\t\t\t})\n\t\t\t};\n\t\t});\n};\n\nnative._http01 = function(me, ch) {\n\tvar url = encodeURIComponent(ch.challengeUrl);\n\treturn me\n\t\t.request({\n\t\t\turl: me._baseUrl + '/api/http?url=' + url\n\t\t})\n\t\t.then(function(resp) {\n\t\t\treturn resp.body;\n\t\t});\n};\n"]},"metadata":{},"sourceType":"script"}