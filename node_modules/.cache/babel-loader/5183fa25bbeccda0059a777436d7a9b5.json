{"ast":null,"code":"'use strict';\n\nvar X509 = module.exports;\n\nvar Enc = require('@root/encoding');\n\nvar ASN1 = require('@root/asn1/parser'); // 1.2.840.10045.3.1.7\n// prime256v1 (ANSI X9.62 named elliptic curve)\n\n\nvar OBJ_ID_EC = '06 08 2A8648CE3D030107'.replace(/\\s+/g, '').toLowerCase(); // 1.3.132.0.34\n// secp384r1 (SECG (Certicom) named elliptic curve)\n\nvar OBJ_ID_EC_384 = '06 05 2B81040022'.replace(/\\s+/g, '').toLowerCase();\n\nX509.parsePkcs1 = function parseRsaPkcs1(asn1, jwk) {\n  if (!jwk) {\n    jwk = {};\n  } // might be a buffer\n\n\n  if (asn1.byteLength) {\n    asn1 = ASN1.parse({\n      der: asn1,\n      verbose: true,\n      json: false\n    });\n  }\n\n  if (!asn1.children.every(function (el) {\n    return 0x02 === el.type;\n  })) {\n    throw new Error('not an RSA PKCS#1 public or private key (not all ints)');\n  }\n\n  if (2 === asn1.children.length) {\n    jwk.n = Enc.bufToUrlBase64(asn1.children[0].value);\n    jwk.e = Enc.bufToUrlBase64(asn1.children[1].value);\n    jwk.kty = 'RSA';\n  } else if (asn1.children.length >= 9) {\n    // the standard allows for \"otherPrimeInfos\", hence at least 9\n    jwk.n = Enc.bufToUrlBase64(asn1.children[1].value);\n    jwk.e = Enc.bufToUrlBase64(asn1.children[2].value);\n    jwk.d = Enc.bufToUrlBase64(asn1.children[3].value);\n    jwk.p = Enc.bufToUrlBase64(asn1.children[4].value);\n    jwk.q = Enc.bufToUrlBase64(asn1.children[5].value);\n    jwk.dp = Enc.bufToUrlBase64(asn1.children[6].value);\n    jwk.dq = Enc.bufToUrlBase64(asn1.children[7].value);\n    jwk.qi = Enc.bufToUrlBase64(asn1.children[8].value);\n    jwk.kty = 'RSA';\n  } else {\n    throw new Error('not an RSA PKCS#1 public or private key (wrong number of ints)');\n  }\n\n  return jwk;\n};\n\nX509.parseSec1 = function parseEcOnlyPrivkey(u8, jwk) {\n  var index = 7;\n  var len = 32;\n  var olen = OBJ_ID_EC.length / 2;\n\n  if ('P-384' === jwk.crv) {\n    olen = OBJ_ID_EC_384.length / 2;\n    index = 8;\n    len = 48;\n  }\n\n  if (len !== u8[index - 1]) {\n    throw new Error('Unexpected bitlength ' + len);\n  } // private part is d\n\n\n  var d = u8.slice(index, index + len); // compression bit index\n\n  var ci = index + len + 2 + olen + 2 + 3;\n  var c = u8[ci];\n  var x, y;\n\n  if (0x04 === c) {\n    y = u8.slice(ci + 1 + len, ci + 1 + len + len);\n  } else if (0x02 !== c) {\n    throw new Error('not a supported EC private key');\n  }\n\n  x = u8.slice(ci + 1, ci + 1 + len);\n  return {\n    kty: jwk.kty || 'EC',\n    crv: jwk.crv || 'P-256',\n    d: Enc.bufToUrlBase64(d),\n    //, dh: Enc.bufToHex(d)\n    x: Enc.bufToUrlBase64(x),\n    //, xh: Enc.bufToHex(x)\n    y: Enc.bufToUrlBase64(y) //, yh: Enc.bufToHex(y)\n\n  };\n};\n\nX509.parsePkcs8 = function (u8, jwk) {\n  try {\n    return X509.parseRsaPkcs8(u8, jwk);\n  } catch (e) {\n    return X509.parseEcPkcs8(u8, jwk);\n  }\n};\n\nX509.parseEcPkcs8 = function parseEcPkcs8(u8, jwk) {\n  var index = 24 + OBJ_ID_EC.length / 2;\n  var len = 32;\n\n  if ('P-384' === jwk.crv) {\n    index = 24 + OBJ_ID_EC_384.length / 2 + 2;\n    len = 48;\n  }\n\n  if (0x04 !== u8[index]) {\n    throw new Error('privkey not found');\n  }\n\n  var d = u8.slice(index + 2, index + 2 + len);\n  var ci = index + 2 + len + 5;\n  var xi = ci + 1;\n  var x = u8.slice(xi, xi + len);\n  var yi = xi + len;\n  var y;\n\n  if (0x04 === u8[ci]) {\n    y = u8.slice(yi, yi + len);\n  } else if (0x02 !== u8[ci]) {\n    throw new Error('invalid compression bit (expected 0x04 or 0x02)');\n  }\n\n  return {\n    kty: jwk.kty || 'EC',\n    crv: jwk.crv || 'P-256',\n    d: Enc.bufToUrlBase64(d),\n    //, dh: Enc.bufToHex(d)\n    x: Enc.bufToUrlBase64(x),\n    //, xh: Enc.bufToHex(x)\n    y: Enc.bufToUrlBase64(y) //, yh: Enc.bufToHex(y)\n\n  };\n};\n\nX509.parseRsaPkcs8 = function parseRsaPkcs8(asn1, jwk) {\n  if (!jwk) {\n    jwk = {};\n  } // might be a buffer\n\n\n  if (asn1.byteLength) {\n    asn1 = ASN1.parse({\n      der: asn1,\n      verbose: true,\n      json: false\n    });\n  }\n\n  if (2 === asn1.children.length && 0x03 === asn1.children[1].type // && 2 === asn1.children[1].children.length\n  ) {\n      asn1 = asn1.children[1].children[0];\n      jwk.n = Enc.bufToUrlBase64(asn1.children[0].value);\n      jwk.e = Enc.bufToUrlBase64(asn1.children[1].value);\n      jwk.kty = 'RSA';\n    } else if (3 === asn1.children.length && 0x04 === asn1.children[2].type && 0x30 === asn1.children[2].children[0].type && 0x02 === asn1.children[2].children[0].children[0].type) {\n    asn1 = asn1.children[2].children[0];\n    jwk.n = Enc.bufToUrlBase64(asn1.children[1].value);\n    jwk.e = Enc.bufToUrlBase64(asn1.children[2].value);\n    jwk.d = Enc.bufToUrlBase64(asn1.children[3].value);\n    jwk.p = Enc.bufToUrlBase64(asn1.children[4].value);\n    jwk.q = Enc.bufToUrlBase64(asn1.children[5].value);\n    jwk.dp = Enc.bufToUrlBase64(asn1.children[6].value);\n    jwk.dq = Enc.bufToUrlBase64(asn1.children[7].value);\n    jwk.qi = Enc.bufToUrlBase64(asn1.children[8].value);\n    jwk.kty = 'RSA';\n  } else {\n    throw new Error('not an RSA PKCS#8 public or private key (wrong format)');\n  }\n\n  return jwk;\n};\n\nX509.parseSpki = function (buf, jwk) {\n  try {\n    return X509.parseRsaPkcs8(buf, jwk);\n  } catch (e) {\n    return X509.parseEcSpki(buf, jwk);\n  }\n};\n\nX509.parseEcSpki = function (u8, jwk) {\n  var ci = 16 + OBJ_ID_EC.length / 2;\n  var len = 32;\n\n  if ('P-384' === jwk.crv) {\n    ci = 16 + OBJ_ID_EC_384.length / 2;\n    len = 48;\n  }\n\n  var c = u8[ci];\n  var xi = ci + 1;\n  var x = u8.slice(xi, xi + len);\n  var yi = xi + len;\n  var y;\n\n  if (0x04 === c) {\n    y = u8.slice(yi, yi + len);\n  } else if (0x02 !== c) {\n    throw new Error('not a supported EC private key');\n  }\n\n  return {\n    kty: jwk.kty || 'EC',\n    crv: jwk.crv || 'P-256',\n    x: Enc.bufToUrlBase64(x),\n    //, xh: Enc.bufToHex(x)\n    y: Enc.bufToUrlBase64(y) //, yh: Enc.bufToHex(y)\n\n  };\n};\n\nX509.parsePkix = X509.parseSpki; // TODO look for ECDSA as well\n\nX509._parseRsa = function (asn1) {\n  // accepting der for compatability with other usages\n  if (asn1.byteLength) {\n    asn1 = ASN1.parse({\n      der: asn1,\n      verbose: true,\n      json: false\n    });\n  }\n\n  var meta = {\n    kty: 'RSA',\n    format: 'pkcs1',\n    public: true\n  }; //meta.asn1 = ASN1.parse(u8);\n\n  if (asn1.children.every(function (el) {\n    return 0x02 === el.type;\n  })) {\n    if (2 === asn1.children.length) {// rsa pkcs1 public\n      //return meta;\n    } else if (asn1.children.length >= 9) {\n      // the standard allows for \"otherPrimeInfos\", hence at least 9\n      meta.public = false; // rsa pkcs1 private\n      //return meta;\n    } else {\n      throw new Error('not an RSA PKCS#1 public or private key (wrong number of ints)');\n    }\n  } else {\n    meta.format = 'pkcs8';\n  }\n\n  var jwk = {\n    kty: 'RSA',\n    n: null,\n    e: null\n  };\n\n  if ('pkcs1' === meta.format) {\n    return X509.parsePkcs1(asn1, jwk);\n  } else {\n    return X509.parsePkcs8(asn1, jwk);\n  }\n};","map":{"version":3,"sources":["C:/Users/xuwen/Desktop/INFO340/project-2-xuwensi/node_modules/@root/x509/parsers.js"],"names":["X509","module","exports","Enc","require","ASN1","OBJ_ID_EC","replace","toLowerCase","OBJ_ID_EC_384","parsePkcs1","parseRsaPkcs1","asn1","jwk","byteLength","parse","der","verbose","json","children","every","el","type","Error","length","n","bufToUrlBase64","value","e","kty","d","p","q","dp","dq","qi","parseSec1","parseEcOnlyPrivkey","u8","index","len","olen","crv","slice","ci","c","x","y","parsePkcs8","parseRsaPkcs8","parseEcPkcs8","xi","yi","parseSpki","buf","parseEcSpki","parsePkix","_parseRsa","meta","format","public"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,MAAM,CAACC,OAAlB;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,mBAAD,CAAlB,C,CAEA;AACA;;;AACA,IAAIE,SAAS,GAAG,yBAAyBC,OAAzB,CAAiC,MAAjC,EAAyC,EAAzC,EAA6CC,WAA7C,EAAhB,C,CACA;AACA;;AACA,IAAIC,aAAa,GAAG,mBAAmBF,OAAnB,CAA2B,MAA3B,EAAmC,EAAnC,EAAuCC,WAAvC,EAApB;;AAEAR,IAAI,CAACU,UAAL,GAAkB,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,GAA7B,EAAkC;AACnD,MAAI,CAACA,GAAL,EAAU;AACTA,IAAAA,GAAG,GAAG,EAAN;AACA,GAHkD,CAKnD;;;AACA,MAAID,IAAI,CAACE,UAAT,EAAqB;AACpBF,IAAAA,IAAI,GAAGP,IAAI,CAACU,KAAL,CAAW;AAAEC,MAAAA,GAAG,EAAEJ,IAAP;AAAaK,MAAAA,OAAO,EAAE,IAAtB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAAX,CAAP;AACA;;AAED,MACC,CAACN,IAAI,CAACO,QAAL,CAAcC,KAAd,CAAoB,UAASC,EAAT,EAAa;AACjC,WAAO,SAASA,EAAE,CAACC,IAAnB;AACA,GAFA,CADF,EAIE;AACD,UAAM,IAAIC,KAAJ,CACL,wDADK,CAAN;AAGA;;AAED,MAAI,MAAMX,IAAI,CAACO,QAAL,CAAcK,MAAxB,EAAgC;AAC/BX,IAAAA,GAAG,CAACY,CAAJ,GAAQtB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACe,CAAJ,GAAQzB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACgB,GAAJ,GAAU,KAAV;AACA,GAJD,MAIO,IAAIjB,IAAI,CAACO,QAAL,CAAcK,MAAd,IAAwB,CAA5B,EAA+B;AACrC;AAEAX,IAAAA,GAAG,CAACY,CAAJ,GAAQtB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACe,CAAJ,GAAQzB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACiB,CAAJ,GAAQ3B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACkB,CAAJ,GAAQ5B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACmB,CAAJ,GAAQ7B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACoB,EAAJ,GAAS9B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAT;AACAd,IAAAA,GAAG,CAACqB,EAAJ,GAAS/B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAT;AACAd,IAAAA,GAAG,CAACsB,EAAJ,GAAShC,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAT;AACAd,IAAAA,GAAG,CAACgB,GAAJ,GAAU,KAAV;AACA,GAZM,MAYA;AACN,UAAM,IAAIN,KAAJ,CACL,gEADK,CAAN;AAGA;;AAED,SAAOV,GAAP;AACA,CA3CD;;AA6CAb,IAAI,CAACoC,SAAL,GAAiB,SAASC,kBAAT,CAA4BC,EAA5B,EAAgCzB,GAAhC,EAAqC;AACrD,MAAI0B,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAGnC,SAAS,CAACkB,MAAV,GAAmB,CAA9B;;AAEA,MAAI,YAAYX,GAAG,CAAC6B,GAApB,EAAyB;AACxBD,IAAAA,IAAI,GAAGhC,aAAa,CAACe,MAAd,GAAuB,CAA9B;AACAe,IAAAA,KAAK,GAAG,CAAR;AACAC,IAAAA,GAAG,GAAG,EAAN;AACA;;AACD,MAAIA,GAAG,KAAKF,EAAE,CAACC,KAAK,GAAG,CAAT,CAAd,EAA2B;AAC1B,UAAM,IAAIhB,KAAJ,CAAU,0BAA0BiB,GAApC,CAAN;AACA,GAZoD,CAcrD;;;AACA,MAAIV,CAAC,GAAGQ,EAAE,CAACK,KAAH,CAASJ,KAAT,EAAgBA,KAAK,GAAGC,GAAxB,CAAR,CAfqD,CAgBrD;;AACA,MAAII,EAAE,GAAGL,KAAK,GAAGC,GAAR,GAAc,CAAd,GAAkBC,IAAlB,GAAyB,CAAzB,GAA6B,CAAtC;AACA,MAAII,CAAC,GAAGP,EAAE,CAACM,EAAD,CAAV;AACA,MAAIE,CAAJ,EAAOC,CAAP;;AAEA,MAAI,SAASF,CAAb,EAAgB;AACfE,IAAAA,CAAC,GAAGT,EAAE,CAACK,KAAH,CAASC,EAAE,GAAG,CAAL,GAASJ,GAAlB,EAAuBI,EAAE,GAAG,CAAL,GAASJ,GAAT,GAAeA,GAAtC,CAAJ;AACA,GAFD,MAEO,IAAI,SAASK,CAAb,EAAgB;AACtB,UAAM,IAAItB,KAAJ,CAAU,gCAAV,CAAN;AACA;;AACDuB,EAAAA,CAAC,GAAGR,EAAE,CAACK,KAAH,CAASC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,CAAL,GAASJ,GAA1B,CAAJ;AAEA,SAAO;AACNX,IAAAA,GAAG,EAAEhB,GAAG,CAACgB,GAAJ,IAAW,IADV;AAENa,IAAAA,GAAG,EAAE7B,GAAG,CAAC6B,GAAJ,IAAW,OAFV;AAGNZ,IAAAA,CAAC,EAAE3B,GAAG,CAACuB,cAAJ,CAAmBI,CAAnB,CAHG;AAIN;AACAgB,IAAAA,CAAC,EAAE3C,GAAG,CAACuB,cAAJ,CAAmBoB,CAAnB,CALG;AAMN;AACAC,IAAAA,CAAC,EAAE5C,GAAG,CAACuB,cAAJ,CAAmBqB,CAAnB,CAPG,CAQN;;AARM,GAAP;AAUA,CAtCD;;AAwCA/C,IAAI,CAACgD,UAAL,GAAkB,UAASV,EAAT,EAAazB,GAAb,EAAkB;AACnC,MAAI;AACH,WAAOb,IAAI,CAACiD,aAAL,CAAmBX,EAAnB,EAAuBzB,GAAvB,CAAP;AACA,GAFD,CAEE,OAAOe,CAAP,EAAU;AACX,WAAO5B,IAAI,CAACkD,YAAL,CAAkBZ,EAAlB,EAAsBzB,GAAtB,CAAP;AACA;AACD,CAND;;AAQAb,IAAI,CAACkD,YAAL,GAAoB,SAASA,YAAT,CAAsBZ,EAAtB,EAA0BzB,GAA1B,EAA+B;AAClD,MAAI0B,KAAK,GAAG,KAAKjC,SAAS,CAACkB,MAAV,GAAmB,CAApC;AACA,MAAIgB,GAAG,GAAG,EAAV;;AACA,MAAI,YAAY3B,GAAG,CAAC6B,GAApB,EAAyB;AACxBH,IAAAA,KAAK,GAAG,KAAK9B,aAAa,CAACe,MAAd,GAAuB,CAA5B,GAAgC,CAAxC;AACAgB,IAAAA,GAAG,GAAG,EAAN;AACA;;AAED,MAAI,SAASF,EAAE,CAACC,KAAD,CAAf,EAAwB;AACvB,UAAM,IAAIhB,KAAJ,CAAU,mBAAV,CAAN;AACA;;AACD,MAAIO,CAAC,GAAGQ,EAAE,CAACK,KAAH,CAASJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAAR,GAAYC,GAAhC,CAAR;AACA,MAAII,EAAE,GAAGL,KAAK,GAAG,CAAR,GAAYC,GAAZ,GAAkB,CAA3B;AACA,MAAIW,EAAE,GAAGP,EAAE,GAAG,CAAd;AACA,MAAIE,CAAC,GAAGR,EAAE,CAACK,KAAH,CAASQ,EAAT,EAAaA,EAAE,GAAGX,GAAlB,CAAR;AACA,MAAIY,EAAE,GAAGD,EAAE,GAAGX,GAAd;AACA,MAAIO,CAAJ;;AACA,MAAI,SAAST,EAAE,CAACM,EAAD,CAAf,EAAqB;AACpBG,IAAAA,CAAC,GAAGT,EAAE,CAACK,KAAH,CAASS,EAAT,EAAaA,EAAE,GAAGZ,GAAlB,CAAJ;AACA,GAFD,MAEO,IAAI,SAASF,EAAE,CAACM,EAAD,CAAf,EAAqB;AAC3B,UAAM,IAAIrB,KAAJ,CAAU,iDAAV,CAAN;AACA;;AAED,SAAO;AACNM,IAAAA,GAAG,EAAEhB,GAAG,CAACgB,GAAJ,IAAW,IADV;AAENa,IAAAA,GAAG,EAAE7B,GAAG,CAAC6B,GAAJ,IAAW,OAFV;AAGNZ,IAAAA,CAAC,EAAE3B,GAAG,CAACuB,cAAJ,CAAmBI,CAAnB,CAHG;AAIN;AACAgB,IAAAA,CAAC,EAAE3C,GAAG,CAACuB,cAAJ,CAAmBoB,CAAnB,CALG;AAMN;AACAC,IAAAA,CAAC,EAAE5C,GAAG,CAACuB,cAAJ,CAAmBqB,CAAnB,CAPG,CAQN;;AARM,GAAP;AAUA,CAjCD;;AAmCA/C,IAAI,CAACiD,aAAL,GAAqB,SAASA,aAAT,CAAuBrC,IAAvB,EAA6BC,GAA7B,EAAkC;AACtD,MAAI,CAACA,GAAL,EAAU;AACTA,IAAAA,GAAG,GAAG,EAAN;AACA,GAHqD,CAKtD;;;AACA,MAAID,IAAI,CAACE,UAAT,EAAqB;AACpBF,IAAAA,IAAI,GAAGP,IAAI,CAACU,KAAL,CAAW;AAAEC,MAAAA,GAAG,EAAEJ,IAAP;AAAaK,MAAAA,OAAO,EAAE,IAAtB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAAX,CAAP;AACA;;AACD,MACC,MAAMN,IAAI,CAACO,QAAL,CAAcK,MAApB,IACA,SAASZ,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBG,IAF3B,CAEgC;AAFhC,IAGE;AACDV,MAAAA,IAAI,GAAGA,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0B,CAA1B,CAAP;AACAN,MAAAA,GAAG,CAACY,CAAJ,GAAQtB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,MAAAA,GAAG,CAACe,CAAJ,GAAQzB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,MAAAA,GAAG,CAACgB,GAAJ,GAAU,KAAV;AACA,KARD,MAQO,IACN,MAAMjB,IAAI,CAACO,QAAL,CAAcK,MAApB,IACA,SAASZ,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBG,IAD1B,IAEA,SAASV,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0B,CAA1B,EAA6BG,IAFtC,IAGA,SAASV,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0B,CAA1B,EAA6BA,QAA7B,CAAsC,CAAtC,EAAyCG,IAJ5C,EAKL;AACDV,IAAAA,IAAI,GAAGA,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0B,CAA1B,CAAP;AACAN,IAAAA,GAAG,CAACY,CAAJ,GAAQtB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACe,CAAJ,GAAQzB,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACiB,CAAJ,GAAQ3B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACkB,CAAJ,GAAQ5B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACmB,CAAJ,GAAQ7B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAR;AACAd,IAAAA,GAAG,CAACoB,EAAJ,GAAS9B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAT;AACAd,IAAAA,GAAG,CAACqB,EAAJ,GAAS/B,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAT;AACAd,IAAAA,GAAG,CAACsB,EAAJ,GAAShC,GAAG,CAACuB,cAAJ,CAAmBd,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,KAApC,CAAT;AACAd,IAAAA,GAAG,CAACgB,GAAJ,GAAU,KAAV;AACA,GAhBM,MAgBA;AACN,UAAM,IAAIN,KAAJ,CACL,wDADK,CAAN;AAGA;;AAED,SAAOV,GAAP;AACA,CAxCD;;AA0CAb,IAAI,CAACqD,SAAL,GAAiB,UAASC,GAAT,EAAczC,GAAd,EAAmB;AACnC,MAAI;AACH,WAAOb,IAAI,CAACiD,aAAL,CAAmBK,GAAnB,EAAwBzC,GAAxB,CAAP;AACA,GAFD,CAEE,OAAOe,CAAP,EAAU;AACX,WAAO5B,IAAI,CAACuD,WAAL,CAAiBD,GAAjB,EAAsBzC,GAAtB,CAAP;AACA;AACD,CAND;;AAQAb,IAAI,CAACuD,WAAL,GAAmB,UAASjB,EAAT,EAAazB,GAAb,EAAkB;AACpC,MAAI+B,EAAE,GAAG,KAAKtC,SAAS,CAACkB,MAAV,GAAmB,CAAjC;AACA,MAAIgB,GAAG,GAAG,EAAV;;AAEA,MAAI,YAAY3B,GAAG,CAAC6B,GAApB,EAAyB;AACxBE,IAAAA,EAAE,GAAG,KAAKnC,aAAa,CAACe,MAAd,GAAuB,CAAjC;AACAgB,IAAAA,GAAG,GAAG,EAAN;AACA;;AAED,MAAIK,CAAC,GAAGP,EAAE,CAACM,EAAD,CAAV;AACA,MAAIO,EAAE,GAAGP,EAAE,GAAG,CAAd;AACA,MAAIE,CAAC,GAAGR,EAAE,CAACK,KAAH,CAASQ,EAAT,EAAaA,EAAE,GAAGX,GAAlB,CAAR;AACA,MAAIY,EAAE,GAAGD,EAAE,GAAGX,GAAd;AACA,MAAIO,CAAJ;;AACA,MAAI,SAASF,CAAb,EAAgB;AACfE,IAAAA,CAAC,GAAGT,EAAE,CAACK,KAAH,CAASS,EAAT,EAAaA,EAAE,GAAGZ,GAAlB,CAAJ;AACA,GAFD,MAEO,IAAI,SAASK,CAAb,EAAgB;AACtB,UAAM,IAAItB,KAAJ,CAAU,gCAAV,CAAN;AACA;;AAED,SAAO;AACNM,IAAAA,GAAG,EAAEhB,GAAG,CAACgB,GAAJ,IAAW,IADV;AAENa,IAAAA,GAAG,EAAE7B,GAAG,CAAC6B,GAAJ,IAAW,OAFV;AAGNI,IAAAA,CAAC,EAAE3C,GAAG,CAACuB,cAAJ,CAAmBoB,CAAnB,CAHG;AAIN;AACAC,IAAAA,CAAC,EAAE5C,GAAG,CAACuB,cAAJ,CAAmBqB,CAAnB,CALG,CAMN;;AANM,GAAP;AAQA,CA5BD;;AA8BA/C,IAAI,CAACwD,SAAL,GAAiBxD,IAAI,CAACqD,SAAtB,C,CAEA;;AACArD,IAAI,CAACyD,SAAL,GAAiB,UAAS7C,IAAT,EAAe;AAC/B;AAEA,MAAIA,IAAI,CAACE,UAAT,EAAqB;AACpBF,IAAAA,IAAI,GAAGP,IAAI,CAACU,KAAL,CAAW;AAAEC,MAAAA,GAAG,EAAEJ,IAAP;AAAaK,MAAAA,OAAO,EAAE,IAAtB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAAX,CAAP;AACA;;AAED,MAAIwC,IAAI,GAAG;AAAE7B,IAAAA,GAAG,EAAE,KAAP;AAAc8B,IAAAA,MAAM,EAAE,OAAtB;AAA+BC,IAAAA,MAAM,EAAE;AAAvC,GAAX,CAP+B,CAQ/B;;AAEA,MACChD,IAAI,CAACO,QAAL,CAAcC,KAAd,CAAoB,UAASC,EAAT,EAAa;AAChC,WAAO,SAASA,EAAE,CAACC,IAAnB;AACA,GAFD,CADD,EAIE;AACD,QAAI,MAAMV,IAAI,CAACO,QAAL,CAAcK,MAAxB,EAAgC,CAC/B;AACA;AACA,KAHD,MAGO,IAAIZ,IAAI,CAACO,QAAL,CAAcK,MAAd,IAAwB,CAA5B,EAA+B;AACrC;AACAkC,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAd,CAFqC,CAGrC;AACA;AACA,KALM,MAKA;AACN,YAAM,IAAIrC,KAAJ,CACL,gEADK,CAAN;AAGA;AACD,GAlBD,MAkBO;AACNmC,IAAAA,IAAI,CAACC,MAAL,GAAc,OAAd;AACA;;AAED,MAAI9C,GAAG,GAAG;AAAEgB,IAAAA,GAAG,EAAE,KAAP;AAAcJ,IAAAA,CAAC,EAAE,IAAjB;AAAuBG,IAAAA,CAAC,EAAE;AAA1B,GAAV;;AACA,MAAI,YAAY8B,IAAI,CAACC,MAArB,EAA6B;AAC5B,WAAO3D,IAAI,CAACU,UAAL,CAAgBE,IAAhB,EAAsBC,GAAtB,CAAP;AACA,GAFD,MAEO;AACN,WAAOb,IAAI,CAACgD,UAAL,CAAgBpC,IAAhB,EAAsBC,GAAtB,CAAP;AACA;AACD,CAtCD","sourcesContent":["'use strict';\n\nvar X509 = module.exports;\nvar Enc = require('@root/encoding');\nvar ASN1 = require('@root/asn1/parser');\n\n// 1.2.840.10045.3.1.7\n// prime256v1 (ANSI X9.62 named elliptic curve)\nvar OBJ_ID_EC = '06 08 2A8648CE3D030107'.replace(/\\s+/g, '').toLowerCase();\n// 1.3.132.0.34\n// secp384r1 (SECG (Certicom) named elliptic curve)\nvar OBJ_ID_EC_384 = '06 05 2B81040022'.replace(/\\s+/g, '').toLowerCase();\n\nX509.parsePkcs1 = function parseRsaPkcs1(asn1, jwk) {\n\tif (!jwk) {\n\t\tjwk = {};\n\t}\n\n\t// might be a buffer\n\tif (asn1.byteLength) {\n\t\tasn1 = ASN1.parse({ der: asn1, verbose: true, json: false });\n\t}\n\n\tif (\n\t\t!asn1.children.every(function(el) {\n\t\t\treturn 0x02 === el.type;\n\t\t})\n\t) {\n\t\tthrow new Error(\n\t\t\t'not an RSA PKCS#1 public or private key (not all ints)'\n\t\t);\n\t}\n\n\tif (2 === asn1.children.length) {\n\t\tjwk.n = Enc.bufToUrlBase64(asn1.children[0].value);\n\t\tjwk.e = Enc.bufToUrlBase64(asn1.children[1].value);\n\t\tjwk.kty = 'RSA';\n\t} else if (asn1.children.length >= 9) {\n\t\t// the standard allows for \"otherPrimeInfos\", hence at least 9\n\n\t\tjwk.n = Enc.bufToUrlBase64(asn1.children[1].value);\n\t\tjwk.e = Enc.bufToUrlBase64(asn1.children[2].value);\n\t\tjwk.d = Enc.bufToUrlBase64(asn1.children[3].value);\n\t\tjwk.p = Enc.bufToUrlBase64(asn1.children[4].value);\n\t\tjwk.q = Enc.bufToUrlBase64(asn1.children[5].value);\n\t\tjwk.dp = Enc.bufToUrlBase64(asn1.children[6].value);\n\t\tjwk.dq = Enc.bufToUrlBase64(asn1.children[7].value);\n\t\tjwk.qi = Enc.bufToUrlBase64(asn1.children[8].value);\n\t\tjwk.kty = 'RSA';\n\t} else {\n\t\tthrow new Error(\n\t\t\t'not an RSA PKCS#1 public or private key (wrong number of ints)'\n\t\t);\n\t}\n\n\treturn jwk;\n};\n\nX509.parseSec1 = function parseEcOnlyPrivkey(u8, jwk) {\n\tvar index = 7;\n\tvar len = 32;\n\tvar olen = OBJ_ID_EC.length / 2;\n\n\tif ('P-384' === jwk.crv) {\n\t\tolen = OBJ_ID_EC_384.length / 2;\n\t\tindex = 8;\n\t\tlen = 48;\n\t}\n\tif (len !== u8[index - 1]) {\n\t\tthrow new Error('Unexpected bitlength ' + len);\n\t}\n\n\t// private part is d\n\tvar d = u8.slice(index, index + len);\n\t// compression bit index\n\tvar ci = index + len + 2 + olen + 2 + 3;\n\tvar c = u8[ci];\n\tvar x, y;\n\n\tif (0x04 === c) {\n\t\ty = u8.slice(ci + 1 + len, ci + 1 + len + len);\n\t} else if (0x02 !== c) {\n\t\tthrow new Error('not a supported EC private key');\n\t}\n\tx = u8.slice(ci + 1, ci + 1 + len);\n\n\treturn {\n\t\tkty: jwk.kty || 'EC',\n\t\tcrv: jwk.crv || 'P-256',\n\t\td: Enc.bufToUrlBase64(d),\n\t\t//, dh: Enc.bufToHex(d)\n\t\tx: Enc.bufToUrlBase64(x),\n\t\t//, xh: Enc.bufToHex(x)\n\t\ty: Enc.bufToUrlBase64(y)\n\t\t//, yh: Enc.bufToHex(y)\n\t};\n};\n\nX509.parsePkcs8 = function(u8, jwk) {\n\ttry {\n\t\treturn X509.parseRsaPkcs8(u8, jwk);\n\t} catch (e) {\n\t\treturn X509.parseEcPkcs8(u8, jwk);\n\t}\n};\n\nX509.parseEcPkcs8 = function parseEcPkcs8(u8, jwk) {\n\tvar index = 24 + OBJ_ID_EC.length / 2;\n\tvar len = 32;\n\tif ('P-384' === jwk.crv) {\n\t\tindex = 24 + OBJ_ID_EC_384.length / 2 + 2;\n\t\tlen = 48;\n\t}\n\n\tif (0x04 !== u8[index]) {\n\t\tthrow new Error('privkey not found');\n\t}\n\tvar d = u8.slice(index + 2, index + 2 + len);\n\tvar ci = index + 2 + len + 5;\n\tvar xi = ci + 1;\n\tvar x = u8.slice(xi, xi + len);\n\tvar yi = xi + len;\n\tvar y;\n\tif (0x04 === u8[ci]) {\n\t\ty = u8.slice(yi, yi + len);\n\t} else if (0x02 !== u8[ci]) {\n\t\tthrow new Error('invalid compression bit (expected 0x04 or 0x02)');\n\t}\n\n\treturn {\n\t\tkty: jwk.kty || 'EC',\n\t\tcrv: jwk.crv || 'P-256',\n\t\td: Enc.bufToUrlBase64(d),\n\t\t//, dh: Enc.bufToHex(d)\n\t\tx: Enc.bufToUrlBase64(x),\n\t\t//, xh: Enc.bufToHex(x)\n\t\ty: Enc.bufToUrlBase64(y)\n\t\t//, yh: Enc.bufToHex(y)\n\t};\n};\n\nX509.parseRsaPkcs8 = function parseRsaPkcs8(asn1, jwk) {\n\tif (!jwk) {\n\t\tjwk = {};\n\t}\n\n\t// might be a buffer\n\tif (asn1.byteLength) {\n\t\tasn1 = ASN1.parse({ der: asn1, verbose: true, json: false });\n\t}\n\tif (\n\t\t2 === asn1.children.length &&\n\t\t0x03 === asn1.children[1].type // && 2 === asn1.children[1].children.length\n\t) {\n\t\tasn1 = asn1.children[1].children[0];\n\t\tjwk.n = Enc.bufToUrlBase64(asn1.children[0].value);\n\t\tjwk.e = Enc.bufToUrlBase64(asn1.children[1].value);\n\t\tjwk.kty = 'RSA';\n\t} else if (\n\t\t3 === asn1.children.length &&\n\t\t0x04 === asn1.children[2].type &&\n\t\t0x30 === asn1.children[2].children[0].type &&\n\t\t0x02 === asn1.children[2].children[0].children[0].type\n\t) {\n\t\tasn1 = asn1.children[2].children[0];\n\t\tjwk.n = Enc.bufToUrlBase64(asn1.children[1].value);\n\t\tjwk.e = Enc.bufToUrlBase64(asn1.children[2].value);\n\t\tjwk.d = Enc.bufToUrlBase64(asn1.children[3].value);\n\t\tjwk.p = Enc.bufToUrlBase64(asn1.children[4].value);\n\t\tjwk.q = Enc.bufToUrlBase64(asn1.children[5].value);\n\t\tjwk.dp = Enc.bufToUrlBase64(asn1.children[6].value);\n\t\tjwk.dq = Enc.bufToUrlBase64(asn1.children[7].value);\n\t\tjwk.qi = Enc.bufToUrlBase64(asn1.children[8].value);\n\t\tjwk.kty = 'RSA';\n\t} else {\n\t\tthrow new Error(\n\t\t\t'not an RSA PKCS#8 public or private key (wrong format)'\n\t\t);\n\t}\n\n\treturn jwk;\n};\n\nX509.parseSpki = function(buf, jwk) {\n\ttry {\n\t\treturn X509.parseRsaPkcs8(buf, jwk);\n\t} catch (e) {\n\t\treturn X509.parseEcSpki(buf, jwk);\n\t}\n};\n\nX509.parseEcSpki = function(u8, jwk) {\n\tvar ci = 16 + OBJ_ID_EC.length / 2;\n\tvar len = 32;\n\n\tif ('P-384' === jwk.crv) {\n\t\tci = 16 + OBJ_ID_EC_384.length / 2;\n\t\tlen = 48;\n\t}\n\n\tvar c = u8[ci];\n\tvar xi = ci + 1;\n\tvar x = u8.slice(xi, xi + len);\n\tvar yi = xi + len;\n\tvar y;\n\tif (0x04 === c) {\n\t\ty = u8.slice(yi, yi + len);\n\t} else if (0x02 !== c) {\n\t\tthrow new Error('not a supported EC private key');\n\t}\n\n\treturn {\n\t\tkty: jwk.kty || 'EC',\n\t\tcrv: jwk.crv || 'P-256',\n\t\tx: Enc.bufToUrlBase64(x),\n\t\t//, xh: Enc.bufToHex(x)\n\t\ty: Enc.bufToUrlBase64(y)\n\t\t//, yh: Enc.bufToHex(y)\n\t};\n};\n\nX509.parsePkix = X509.parseSpki;\n\n// TODO look for ECDSA as well\nX509._parseRsa = function(asn1) {\n\t// accepting der for compatability with other usages\n\n\tif (asn1.byteLength) {\n\t\tasn1 = ASN1.parse({ der: asn1, verbose: true, json: false });\n\t}\n\n\tvar meta = { kty: 'RSA', format: 'pkcs1', public: true };\n\t//meta.asn1 = ASN1.parse(u8);\n\n\tif (\n\t\tasn1.children.every(function(el) {\n\t\t\treturn 0x02 === el.type;\n\t\t})\n\t) {\n\t\tif (2 === asn1.children.length) {\n\t\t\t// rsa pkcs1 public\n\t\t\t//return meta;\n\t\t} else if (asn1.children.length >= 9) {\n\t\t\t// the standard allows for \"otherPrimeInfos\", hence at least 9\n\t\t\tmeta.public = false;\n\t\t\t// rsa pkcs1 private\n\t\t\t//return meta;\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t'not an RSA PKCS#1 public or private key (wrong number of ints)'\n\t\t\t);\n\t\t}\n\t} else {\n\t\tmeta.format = 'pkcs8';\n\t}\n\n\tvar jwk = { kty: 'RSA', n: null, e: null };\n\tif ('pkcs1' === meta.format) {\n\t\treturn X509.parsePkcs1(asn1, jwk);\n\t} else {\n\t\treturn X509.parsePkcs8(asn1, jwk);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}